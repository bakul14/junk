
TIMECPP.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000001fe  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  00000252  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000028  00000000  00000000  00000282  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000028b  00000000  00000000  000002aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000fa  00000000  00000000  00000535  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   0000017b  00000000  00000000  0000062f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000050  00000000  00000000  000007ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000186  00000000  00000000  000007fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000056  00000000  00000000  00000982  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000018  00000000  00000000  000009d8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 56 00 	jmp	0xac	; 0xac <__ctors_end>
   4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
   8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
   c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  10:	0c 94 8b 00 	jmp	0x116	; 0x116 <__vector_4>
  14:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  18:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  1c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  20:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  24:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  28:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  2c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  30:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  34:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  38:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  3c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  40:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  44:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  48:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  4c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  50:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  54:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  58:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  5c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  60:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  64:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  68:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  6c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  70:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  74:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  78:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  7c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  80:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  84:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  88:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  8c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  90:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  94:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  98:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  9c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a0:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	da e0       	ldi	r29, 0x0A	; 10
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61
  b8:	0e 94 62 00 	call	0xc4	; 0xc4 <main>
  bc:	0c 94 fd 00 	jmp	0x1fa	; 0x1fa <_exit>

000000c0 <__bad_interrupt>:
  c0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c4 <main>:



int main(void)
{
	DDRB |= 1<<3;  //часы
  c4:	23 9a       	sbi	0x04, 3	; 4
	DDRB &= ~1<<1; //кнопка
  c6:	84 b1       	in	r24, 0x04	; 4
  c8:	8c 7f       	andi	r24, 0xFC	; 252
  ca:	84 b9       	out	0x04, r24	; 4
	DDRD |= 1<<0 | 1<<1 | 1<<4 | 1<<7; //фонари
  cc:	8a b1       	in	r24, 0x0a	; 10
  ce:	83 69       	ori	r24, 0x93	; 147
  d0:	8a b9       	out	0x0a, r24	; 10
	DDRC |= 1<<6; //фонари
  d2:	3e 9a       	sbi	0x07, 6	; 7
	DDRE |= 1<<6; //фонари
  d4:	6e 9a       	sbi	0x0d, 6	; 13
	DDRD &= ~1<<3; //датчик
  d6:	8a b1       	in	r24, 0x0a	; 10
  d8:	80 7f       	andi	r24, 0xF0	; 240
  da:	8a b9       	out	0x0a, r24	; 10
	SREG |= 1<<7;
  dc:	8f b7       	in	r24, 0x3f	; 63
  de:	80 68       	ori	r24, 0x80	; 128
  e0:	8f bf       	out	0x3f, r24	; 63
	EICRA = 0b11000000;
  e2:	80 ec       	ldi	r24, 0xC0	; 192
  e4:	80 93 69 00 	sts	0x0069, r24
	EIMSK |= 1<<3;
  e8:	eb 9a       	sbi	0x1d, 3	; 29
	
	PORTC &= ~1<<6;
  ea:	88 b1       	in	r24, 0x08	; 8
  ec:	80 78       	andi	r24, 0x80	; 128
  ee:	88 b9       	out	0x08, r24	; 8
	PORTD &= ~1<<7;
  f0:	8b b1       	in	r24, 0x0b	; 11
  f2:	1b b8       	out	0x0b, r1	; 11
	PORTD &= ~1<<1;
  f4:	8b b1       	in	r24, 0x0b	; 11
  f6:	8c 7f       	andi	r24, 0xFC	; 252
  f8:	8b b9       	out	0x0b, r24	; 11
	PORTE &= ~1<<6;
  fa:	8e b1       	in	r24, 0x0e	; 14
  fc:	80 78       	andi	r24, 0x80	; 128
  fe:	8e b9       	out	0x0e, r24	; 14
	PORTD &= ~1<<0;
 100:	58 98       	cbi	0x0b, 0	; 11
	PORTB &= ~1<<3;
 102:	85 b1       	in	r24, 0x05	; 5
 104:	80 7f       	andi	r24, 0xF0	; 240
 106:	85 b9       	out	0x05, r24	; 5
	
	PORTD &= ~1<<3;
 108:	8b b1       	in	r24, 0x0b	; 11
 10a:	80 7f       	andi	r24, 0xF0	; 240
 10c:	8b b9       	out	0x0b, r24	; 11
	
	
	while(1)
	{
		if (PINB & 1<<1) PORTB |= 1<<3;
 10e:	19 9b       	sbis	0x03, 1	; 3
 110:	fe cf       	rjmp	.-4      	; 0x10e <main+0x4a>
 112:	2b 9a       	sbi	0x05, 3	; 5
 114:	fc cf       	rjmp	.-8      	; 0x10e <main+0x4a>

00000116 <__vector_4>:
	}
}

	ISR (INT3_vect) {
 116:	1f 92       	push	r1
 118:	0f 92       	push	r0
 11a:	0f b6       	in	r0, 0x3f	; 63
 11c:	0f 92       	push	r0
 11e:	11 24       	eor	r1, r1
 120:	2f 93       	push	r18
 122:	8f 93       	push	r24
 124:	9f 93       	push	r25
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 126:	2f ef       	ldi	r18, 0xFF	; 255
 128:	83 ec       	ldi	r24, 0xC3	; 195
 12a:	99 e0       	ldi	r25, 0x09	; 9
 12c:	21 50       	subi	r18, 0x01	; 1
 12e:	80 40       	sbci	r24, 0x00	; 0
 130:	90 40       	sbci	r25, 0x00	; 0
 132:	e1 f7       	brne	.-8      	; 0x12c <__vector_4+0x16>
 134:	00 c0       	rjmp	.+0      	; 0x136 <__vector_4+0x20>
 136:	00 00       	nop
		
		_delay_ms(200);
		
		PORTC |= 1<<6;
 138:	46 9a       	sbi	0x08, 6	; 8
		PORTD |= 1<<7;
 13a:	5f 9a       	sbi	0x0b, 7	; 11
		PORTD |= 1<<1;
 13c:	59 9a       	sbi	0x0b, 1	; 11
		PORTE |= 1<<6;
 13e:	76 9a       	sbi	0x0e, 6	; 14
		PORTD |= 1<<0;
 140:	58 9a       	sbi	0x0b, 0	; 11
 142:	2f ef       	ldi	r18, 0xFF	; 255
 144:	83 ed       	ldi	r24, 0xD3	; 211
 146:	90 e3       	ldi	r25, 0x30	; 48
 148:	21 50       	subi	r18, 0x01	; 1
 14a:	80 40       	sbci	r24, 0x00	; 0
 14c:	90 40       	sbci	r25, 0x00	; 0
 14e:	e1 f7       	brne	.-8      	; 0x148 <__vector_4+0x32>
 150:	00 c0       	rjmp	.+0      	; 0x152 <__vector_4+0x3c>
 152:	00 00       	nop


		_delay_ms(1000);
		PORTC &= ~1<<6;
 154:	88 b1       	in	r24, 0x08	; 8
 156:	80 78       	andi	r24, 0x80	; 128
 158:	88 b9       	out	0x08, r24	; 8
		PORTD |= 1<<7;
 15a:	5f 9a       	sbi	0x0b, 7	; 11
		PORTD |= 1<<1;
 15c:	59 9a       	sbi	0x0b, 1	; 11
		PORTE |= 1<<6;
 15e:	76 9a       	sbi	0x0e, 6	; 14
		PORTD |= 1<<0;
 160:	58 9a       	sbi	0x0b, 0	; 11
 162:	2f ef       	ldi	r18, 0xFF	; 255
 164:	83 ed       	ldi	r24, 0xD3	; 211
 166:	90 e3       	ldi	r25, 0x30	; 48
 168:	21 50       	subi	r18, 0x01	; 1
 16a:	80 40       	sbci	r24, 0x00	; 0
 16c:	90 40       	sbci	r25, 0x00	; 0
 16e:	e1 f7       	brne	.-8      	; 0x168 <__vector_4+0x52>
 170:	00 c0       	rjmp	.+0      	; 0x172 <__vector_4+0x5c>
 172:	00 00       	nop
				
		_delay_ms(1000);
		PORTD &= ~1<<7;
 174:	8b b1       	in	r24, 0x0b	; 11
 176:	1b b8       	out	0x0b, r1	; 11
		PORTD |= 1<<1;
 178:	59 9a       	sbi	0x0b, 1	; 11
		PORTE |= 1<<6;
 17a:	76 9a       	sbi	0x0e, 6	; 14
		PORTD |= 1<<0;
 17c:	58 9a       	sbi	0x0b, 0	; 11
 17e:	2f ef       	ldi	r18, 0xFF	; 255
 180:	83 ed       	ldi	r24, 0xD3	; 211
 182:	90 e3       	ldi	r25, 0x30	; 48
 184:	21 50       	subi	r18, 0x01	; 1
 186:	80 40       	sbci	r24, 0x00	; 0
 188:	90 40       	sbci	r25, 0x00	; 0
 18a:	e1 f7       	brne	.-8      	; 0x184 <__vector_4+0x6e>
 18c:	00 c0       	rjmp	.+0      	; 0x18e <__vector_4+0x78>
 18e:	00 00       	nop

		
		_delay_ms(1000);
		PORTD &= ~1<<1;
 190:	8b b1       	in	r24, 0x0b	; 11
 192:	8c 7f       	andi	r24, 0xFC	; 252
 194:	8b b9       	out	0x0b, r24	; 11
		PORTE |= 1<<6;
 196:	76 9a       	sbi	0x0e, 6	; 14
		PORTD |= 1<<0;
 198:	58 9a       	sbi	0x0b, 0	; 11
 19a:	2f ef       	ldi	r18, 0xFF	; 255
 19c:	83 ed       	ldi	r24, 0xD3	; 211
 19e:	90 e3       	ldi	r25, 0x30	; 48
 1a0:	21 50       	subi	r18, 0x01	; 1
 1a2:	80 40       	sbci	r24, 0x00	; 0
 1a4:	90 40       	sbci	r25, 0x00	; 0
 1a6:	e1 f7       	brne	.-8      	; 0x1a0 <__vector_4+0x8a>
 1a8:	00 c0       	rjmp	.+0      	; 0x1aa <__vector_4+0x94>
 1aa:	00 00       	nop

		
		_delay_ms(1000);
		PORTE &= ~1<<6;
 1ac:	8e b1       	in	r24, 0x0e	; 14
 1ae:	80 78       	andi	r24, 0x80	; 128
 1b0:	8e b9       	out	0x0e, r24	; 14
		PORTD |= 1<<0;
 1b2:	58 9a       	sbi	0x0b, 0	; 11
 1b4:	2f ef       	ldi	r18, 0xFF	; 255
 1b6:	83 ed       	ldi	r24, 0xD3	; 211
 1b8:	90 e3       	ldi	r25, 0x30	; 48
 1ba:	21 50       	subi	r18, 0x01	; 1
 1bc:	80 40       	sbci	r24, 0x00	; 0
 1be:	90 40       	sbci	r25, 0x00	; 0
 1c0:	e1 f7       	brne	.-8      	; 0x1ba <__vector_4+0xa4>
 1c2:	00 c0       	rjmp	.+0      	; 0x1c4 <__vector_4+0xae>
 1c4:	00 00       	nop

		
		_delay_ms(1000);
		PORTD &= ~1<<0;
 1c6:	58 98       	cbi	0x0b, 0	; 11
		PORTB &= ~1<<3;
 1c8:	85 b1       	in	r24, 0x05	; 5
 1ca:	80 7f       	andi	r24, 0xF0	; 240
 1cc:	85 b9       	out	0x05, r24	; 5
		PORTD |= 1<<4;
 1ce:	5c 9a       	sbi	0x0b, 4	; 11
 1d0:	2f ef       	ldi	r18, 0xFF	; 255
 1d2:	87 ea       	ldi	r24, 0xA7	; 167
 1d4:	91 e6       	ldi	r25, 0x61	; 97
 1d6:	21 50       	subi	r18, 0x01	; 1
 1d8:	80 40       	sbci	r24, 0x00	; 0
 1da:	90 40       	sbci	r25, 0x00	; 0
 1dc:	e1 f7       	brne	.-8      	; 0x1d6 <__vector_4+0xc0>
 1de:	00 c0       	rjmp	.+0      	; 0x1e0 <__vector_4+0xca>
 1e0:	00 00       	nop
		
		_delay_ms(2000);
		PORTD &= ~1<<4;
 1e2:	8b b1       	in	r24, 0x0b	; 11
 1e4:	80 7e       	andi	r24, 0xE0	; 224
 1e6:	8b b9       	out	0x0b, r24	; 11
		
		EIFR |= 1<<3;
 1e8:	e3 9a       	sbi	0x1c, 3	; 28

 1ea:	9f 91       	pop	r25
 1ec:	8f 91       	pop	r24
 1ee:	2f 91       	pop	r18
 1f0:	0f 90       	pop	r0
 1f2:	0f be       	out	0x3f, r0	; 63
 1f4:	0f 90       	pop	r0
 1f6:	1f 90       	pop	r1
 1f8:	18 95       	reti

000001fa <_exit>:
 1fa:	f8 94       	cli

000001fc <__stop_program>:
 1fc:	ff cf       	rjmp	.-2      	; 0x1fc <__stop_program>
