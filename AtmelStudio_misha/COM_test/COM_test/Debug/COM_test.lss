
COM_test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000041a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000000e  00800060  0000041a  000004ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000013  0080006e  0080006e  000004bc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000004bc  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  000004ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000023b  00000000  00000000  00000524  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000000da  00000000  00000000  0000075f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000001b0  00000000  00000000  00000839  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000e0  00000000  00000000  000009ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000183  00000000  00000000  00000acc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001e3  00000000  00000000  00000c4f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  00000e32  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	1a c0       	rjmp	.+52     	; 0x36 <__ctors_end>
   2:	34 c0       	rjmp	.+104    	; 0x6c <__bad_interrupt>
   4:	33 c0       	rjmp	.+102    	; 0x6c <__bad_interrupt>
   6:	b0 c1       	rjmp	.+864    	; 0x368 <__vector_3>
   8:	31 c0       	rjmp	.+98     	; 0x6c <__bad_interrupt>
   a:	30 c0       	rjmp	.+96     	; 0x6c <__bad_interrupt>
   c:	55 c1       	rjmp	.+682    	; 0x2b8 <__vector_6>
   e:	2e c0       	rjmp	.+92     	; 0x6c <__bad_interrupt>
  10:	2d c0       	rjmp	.+90     	; 0x6c <__bad_interrupt>
  12:	b4 c0       	rjmp	.+360    	; 0x17c <__vector_9>
  14:	2b c0       	rjmp	.+86     	; 0x6c <__bad_interrupt>
  16:	2a c0       	rjmp	.+84     	; 0x6c <__bad_interrupt>
  18:	29 c0       	rjmp	.+82     	; 0x6c <__bad_interrupt>
  1a:	28 c0       	rjmp	.+80     	; 0x6c <__bad_interrupt>
  1c:	27 c0       	rjmp	.+78     	; 0x6c <__bad_interrupt>
  1e:	26 c0       	rjmp	.+76     	; 0x6c <__bad_interrupt>
  20:	25 c0       	rjmp	.+74     	; 0x6c <__bad_interrupt>
  22:	24 c0       	rjmp	.+72     	; 0x6c <__bad_interrupt>
  24:	23 c0       	rjmp	.+70     	; 0x6c <__bad_interrupt>
  26:	c0 c0       	rjmp	.+384    	; 0x1a8 <__vector_9+0x2c>
  28:	cd c0       	rjmp	.+410    	; 0x1c4 <__vector_9+0x48>
  2a:	da c0       	rjmp	.+436    	; 0x1e0 <__vector_9+0x64>
  2c:	e7 c0       	rjmp	.+462    	; 0x1fc <__vector_9+0x80>
  2e:	f4 c0       	rjmp	.+488    	; 0x218 <__vector_9+0x9c>
  30:	01 c1       	rjmp	.+514    	; 0x234 <__vector_9+0xb8>
  32:	0e c1       	rjmp	.+540    	; 0x250 <__vector_9+0xd4>
  34:	1b c1       	rjmp	.+566    	; 0x26c <__vector_9+0xf0>

00000036 <__ctors_end>:
  36:	11 24       	eor	r1, r1
  38:	1f be       	out	0x3f, r1	; 63
  3a:	cf e5       	ldi	r28, 0x5F	; 95
  3c:	d4 e0       	ldi	r29, 0x04	; 4
  3e:	de bf       	out	0x3e, r29	; 62
  40:	cd bf       	out	0x3d, r28	; 61

00000042 <__do_copy_data>:
  42:	10 e0       	ldi	r17, 0x00	; 0
  44:	a0 e6       	ldi	r26, 0x60	; 96
  46:	b0 e0       	ldi	r27, 0x00	; 0
  48:	ea e1       	ldi	r30, 0x1A	; 26
  4a:	f4 e0       	ldi	r31, 0x04	; 4
  4c:	02 c0       	rjmp	.+4      	; 0x52 <__do_copy_data+0x10>
  4e:	05 90       	lpm	r0, Z+
  50:	0d 92       	st	X+, r0
  52:	ae 36       	cpi	r26, 0x6E	; 110
  54:	b1 07       	cpc	r27, r17
  56:	d9 f7       	brne	.-10     	; 0x4e <__do_copy_data+0xc>

00000058 <__do_clear_bss>:
  58:	20 e0       	ldi	r18, 0x00	; 0
  5a:	ae e6       	ldi	r26, 0x6E	; 110
  5c:	b0 e0       	ldi	r27, 0x00	; 0
  5e:	01 c0       	rjmp	.+2      	; 0x62 <.do_clear_bss_start>

00000060 <.do_clear_bss_loop>:
  60:	1d 92       	st	X+, r1

00000062 <.do_clear_bss_start>:
  62:	a1 38       	cpi	r26, 0x81	; 129
  64:	b2 07       	cpc	r27, r18
  66:	e1 f7       	brne	.-8      	; 0x60 <.do_clear_bss_loop>
  68:	02 d0       	rcall	.+4      	; 0x6e <main>
  6a:	d5 c1       	rjmp	.+938    	; 0x416 <_exit>

0000006c <__bad_interrupt>:
  6c:	c9 cf       	rjmp	.-110    	; 0x0 <__vectors>

0000006e <main>:
{
	uint8_t n = 0; //передача
	int rpm = 600; //об_мин
	float d = 2; //диаметр_провода

	DDRB |= 1<<2 | 1<<3 | 1<<5;
  6e:	87 b3       	in	r24, 0x17	; 23
  70:	8c 62       	ori	r24, 0x2C	; 44
  72:	87 bb       	out	0x17, r24	; 23
	DDRD |= 1<<6 | 1<<7;
  74:	81 b3       	in	r24, 0x11	; 17
  76:	80 6c       	ori	r24, 0xC0	; 192
  78:	81 bb       	out	0x11, r24	; 17
	SREG |= 1<<7;
  7a:	8f b7       	in	r24, 0x3f	; 63
  7c:	80 68       	ori	r24, 0x80	; 128
  7e:	8f bf       	out	0x3f, r24	; 63
	SPCR = 0b01010000;
  80:	80 e5       	ldi	r24, 0x50	; 80
  82:	8d b9       	out	0x0d, r24	; 13
	if (rpm < 38) {
		TCCR2 = 0b00001101; //clk/128
		n = 1;
	}
	if (rpm >= 38) {
		TCCR2 = 0b00001100; //clk/64
  84:	8c e0       	ldi	r24, 0x0C	; 12
  86:	85 bd       	out	0x25, r24	; 37
		n = 2;
	}
	if (rpm >= 75) {
		TCCR2 = 0b00001011; //clk/32
  88:	8b e0       	ldi	r24, 0x0B	; 11
  8a:	85 bd       	out	0x25, r24	; 37
		n = 4;
	}
	if (rpm >= 300) {
		TCCR2 = 0b00001010; //clk/8
  8c:	8a e0       	ldi	r24, 0x0A	; 10
  8e:	85 bd       	out	0x25, r24	; 37
		n = 16;
	}
	
	
	TCCR1A = 0;
  90:	1f bc       	out	0x2f, r1	; 47
	TCCR1B = 0b00001010; //clk/8
  92:	8e bd       	out	0x2e, r24	; 46
	
	TCCR0 = 0b00000010;
  94:	82 e0       	ldi	r24, 0x02	; 2
  96:	83 bf       	out	0x33, r24	; 51
	
	OCR1A = 149820/d/rpm; //2497/d/(rpm/60)
  98:	8c e7       	ldi	r24, 0x7C	; 124
  9a:	90 e0       	ldi	r25, 0x00	; 0
  9c:	9b bd       	out	0x2b, r25	; 43
  9e:	8a bd       	out	0x2a, r24	; 42
	OCR2 = (4687.5/rpm)*n-1; //78/rpm/60-1 4680
  a0:	83 bd       	out	0x23, r24	; 35
	
	TIMSK = 0b10010001;
  a2:	81 e9       	ldi	r24, 0x91	; 145
  a4:	89 bf       	out	0x39, r24	; 57

	while(1) {
		up = down = kv/1600;
  a6:	00 e4       	ldi	r16, 0x40	; 64
  a8:	16 e0       	ldi	r17, 0x06	; 6
		
		r4 = down/1000;
  aa:	28 ee       	ldi	r18, 0xE8	; 232
  ac:	33 e0       	ldi	r19, 0x03	; 3
		r5 = down%1000/100;
  ae:	e4 e6       	ldi	r30, 0x64	; 100
  b0:	f0 e0       	ldi	r31, 0x00	; 0
		r6 = down%1000%100/10;
  b2:	ca e0       	ldi	r28, 0x0A	; 10
  b4:	d0 e0       	ldi	r29, 0x00	; 0
	OCR2 = (4687.5/rpm)*n-1; //78/rpm/60-1 4680
	
	TIMSK = 0b10010001;

	while(1) {
		up = down = kv/1600;
  b6:	80 91 6e 00 	lds	r24, 0x006E
  ba:	90 91 6f 00 	lds	r25, 0x006F
  be:	b8 01       	movw	r22, r16
  c0:	6d d1       	rcall	.+730    	; 0x39c <__divmodhi4>
  c2:	70 93 71 00 	sts	0x0071, r23
  c6:	60 93 70 00 	sts	0x0070, r22
  ca:	70 93 73 00 	sts	0x0073, r23
  ce:	60 93 72 00 	sts	0x0072, r22
		
		r4 = down/1000;
  d2:	80 91 70 00 	lds	r24, 0x0070
  d6:	90 91 71 00 	lds	r25, 0x0071
  da:	b9 01       	movw	r22, r18
  dc:	5f d1       	rcall	.+702    	; 0x39c <__divmodhi4>
  de:	60 93 77 00 	sts	0x0077, r22
		r5 = down%1000/100;
  e2:	80 91 70 00 	lds	r24, 0x0070
  e6:	90 91 71 00 	lds	r25, 0x0071
  ea:	b9 01       	movw	r22, r18
  ec:	57 d1       	rcall	.+686    	; 0x39c <__divmodhi4>
  ee:	bf 01       	movw	r22, r30
  f0:	55 d1       	rcall	.+682    	; 0x39c <__divmodhi4>
  f2:	60 93 76 00 	sts	0x0076, r22
		r6 = down%1000%100/10;
  f6:	80 91 70 00 	lds	r24, 0x0070
  fa:	90 91 71 00 	lds	r25, 0x0071
  fe:	b9 01       	movw	r22, r18
 100:	4d d1       	rcall	.+666    	; 0x39c <__divmodhi4>
 102:	bf 01       	movw	r22, r30
 104:	4b d1       	rcall	.+662    	; 0x39c <__divmodhi4>
 106:	be 01       	movw	r22, r28
 108:	49 d1       	rcall	.+658    	; 0x39c <__divmodhi4>
 10a:	60 93 75 00 	sts	0x0075, r22
		r7 = down%1000%100%10;
 10e:	80 91 70 00 	lds	r24, 0x0070
 112:	90 91 71 00 	lds	r25, 0x0071
 116:	b9 01       	movw	r22, r18
 118:	41 d1       	rcall	.+642    	; 0x39c <__divmodhi4>
 11a:	bf 01       	movw	r22, r30
 11c:	3f d1       	rcall	.+638    	; 0x39c <__divmodhi4>
 11e:	be 01       	movw	r22, r28
 120:	3d d1       	rcall	.+634    	; 0x39c <__divmodhi4>
 122:	80 93 74 00 	sts	0x0074, r24
		
		r0 = up/1000;
 126:	80 91 72 00 	lds	r24, 0x0072
 12a:	90 91 73 00 	lds	r25, 0x0073
 12e:	b9 01       	movw	r22, r18
 130:	35 d1       	rcall	.+618    	; 0x39c <__divmodhi4>
 132:	60 93 7b 00 	sts	0x007B, r22
		r1 = up%1000/100;
 136:	80 91 72 00 	lds	r24, 0x0072
 13a:	90 91 73 00 	lds	r25, 0x0073
 13e:	b9 01       	movw	r22, r18
 140:	2d d1       	rcall	.+602    	; 0x39c <__divmodhi4>
 142:	bf 01       	movw	r22, r30
 144:	2b d1       	rcall	.+598    	; 0x39c <__divmodhi4>
 146:	60 93 7a 00 	sts	0x007A, r22
		r2 = up%1000%100/10;
 14a:	80 91 72 00 	lds	r24, 0x0072
 14e:	90 91 73 00 	lds	r25, 0x0073
 152:	b9 01       	movw	r22, r18
 154:	23 d1       	rcall	.+582    	; 0x39c <__divmodhi4>
 156:	bf 01       	movw	r22, r30
 158:	21 d1       	rcall	.+578    	; 0x39c <__divmodhi4>
 15a:	be 01       	movw	r22, r28
 15c:	1f d1       	rcall	.+574    	; 0x39c <__divmodhi4>
 15e:	60 93 79 00 	sts	0x0079, r22
		r3 = up%1000%100%10;
 162:	80 91 72 00 	lds	r24, 0x0072
 166:	90 91 73 00 	lds	r25, 0x0073
 16a:	b9 01       	movw	r22, r18
 16c:	17 d1       	rcall	.+558    	; 0x39c <__divmodhi4>
 16e:	bf 01       	movw	r22, r30
 170:	15 d1       	rcall	.+554    	; 0x39c <__divmodhi4>
 172:	be 01       	movw	r22, r28
 174:	13 d1       	rcall	.+550    	; 0x39c <__divmodhi4>
 176:	80 93 78 00 	sts	0x0078, r24
 17a:	9d cf       	rjmp	.-198    	; 0xb6 <main+0x48>

0000017c <__vector_9>:
	}
	
	
}

ISR (TIMER0_OVF_vect) {
 17c:	1f 92       	push	r1
 17e:	0f 92       	push	r0
 180:	0f b6       	in	r0, 0x3f	; 63
 182:	0f 92       	push	r0
 184:	11 24       	eor	r1, r1
 186:	8f 93       	push	r24
 188:	9f 93       	push	r25
 18a:	af 93       	push	r26
 18c:	bf 93       	push	r27
 18e:	ef 93       	push	r30
 190:	ff 93       	push	r31
	switch (i) {
 192:	80 91 7c 00 	lds	r24, 0x007C
 196:	90 e0       	ldi	r25, 0x00	; 0
 198:	88 30       	cpi	r24, 0x08	; 8
 19a:	91 05       	cpc	r25, r1
 19c:	08 f0       	brcs	.+2      	; 0x1a0 <__vector_9+0x24>
 19e:	73 c0       	rjmp	.+230    	; 0x286 <__vector_9+0x10a>
 1a0:	fc 01       	movw	r30, r24
 1a2:	ed 5e       	subi	r30, 0xED	; 237
 1a4:	ff 4f       	sbci	r31, 0xFF	; 255
 1a6:	09 94       	ijmp
		case 0: SPDR = mass[r0]; while(!(SPSR & (1<<SPIF))); SPDR = 0b10000000; while(!(SPSR & (1<<SPIF))); break;
 1a8:	e0 91 7b 00 	lds	r30, 0x007B
 1ac:	f0 e0       	ldi	r31, 0x00	; 0
 1ae:	e0 5a       	subi	r30, 0xA0	; 160
 1b0:	ff 4f       	sbci	r31, 0xFF	; 255
 1b2:	80 81       	ld	r24, Z
 1b4:	8f b9       	out	0x0f, r24	; 15
 1b6:	77 9b       	sbis	0x0e, 7	; 14
 1b8:	fe cf       	rjmp	.-4      	; 0x1b6 <__vector_9+0x3a>
 1ba:	80 e8       	ldi	r24, 0x80	; 128
 1bc:	8f b9       	out	0x0f, r24	; 15
 1be:	77 9b       	sbis	0x0e, 7	; 14
 1c0:	fe cf       	rjmp	.-4      	; 0x1be <__vector_9+0x42>
 1c2:	61 c0       	rjmp	.+194    	; 0x286 <__vector_9+0x10a>
		case 1: SPDR = mass[r1]; while(!(SPSR & (1<<SPIF))); SPDR = 0b01000000; while(!(SPSR & (1<<SPIF))); break;
 1c4:	e0 91 7a 00 	lds	r30, 0x007A
 1c8:	f0 e0       	ldi	r31, 0x00	; 0
 1ca:	e0 5a       	subi	r30, 0xA0	; 160
 1cc:	ff 4f       	sbci	r31, 0xFF	; 255
 1ce:	80 81       	ld	r24, Z
 1d0:	8f b9       	out	0x0f, r24	; 15
 1d2:	77 9b       	sbis	0x0e, 7	; 14
 1d4:	fe cf       	rjmp	.-4      	; 0x1d2 <__vector_9+0x56>
 1d6:	80 e4       	ldi	r24, 0x40	; 64
 1d8:	8f b9       	out	0x0f, r24	; 15
 1da:	77 9b       	sbis	0x0e, 7	; 14
 1dc:	fe cf       	rjmp	.-4      	; 0x1da <__vector_9+0x5e>
 1de:	53 c0       	rjmp	.+166    	; 0x286 <__vector_9+0x10a>
		case 2: SPDR = mass[r2]; while(!(SPSR & (1<<SPIF))); SPDR = 0b00100000; while(!(SPSR & (1<<SPIF))); break;
 1e0:	e0 91 79 00 	lds	r30, 0x0079
 1e4:	f0 e0       	ldi	r31, 0x00	; 0
 1e6:	e0 5a       	subi	r30, 0xA0	; 160
 1e8:	ff 4f       	sbci	r31, 0xFF	; 255
 1ea:	80 81       	ld	r24, Z
 1ec:	8f b9       	out	0x0f, r24	; 15
 1ee:	77 9b       	sbis	0x0e, 7	; 14
 1f0:	fe cf       	rjmp	.-4      	; 0x1ee <__vector_9+0x72>
 1f2:	80 e2       	ldi	r24, 0x20	; 32
 1f4:	8f b9       	out	0x0f, r24	; 15
 1f6:	77 9b       	sbis	0x0e, 7	; 14
 1f8:	fe cf       	rjmp	.-4      	; 0x1f6 <__vector_9+0x7a>
 1fa:	45 c0       	rjmp	.+138    	; 0x286 <__vector_9+0x10a>
		case 3: SPDR = mass[r3]; while(!(SPSR & (1<<SPIF))); SPDR = 0b00010000; while(!(SPSR & (1<<SPIF))); break;
 1fc:	e0 91 78 00 	lds	r30, 0x0078
 200:	f0 e0       	ldi	r31, 0x00	; 0
 202:	e0 5a       	subi	r30, 0xA0	; 160
 204:	ff 4f       	sbci	r31, 0xFF	; 255
 206:	80 81       	ld	r24, Z
 208:	8f b9       	out	0x0f, r24	; 15
 20a:	77 9b       	sbis	0x0e, 7	; 14
 20c:	fe cf       	rjmp	.-4      	; 0x20a <__vector_9+0x8e>
 20e:	80 e1       	ldi	r24, 0x10	; 16
 210:	8f b9       	out	0x0f, r24	; 15
 212:	77 9b       	sbis	0x0e, 7	; 14
 214:	fe cf       	rjmp	.-4      	; 0x212 <__vector_9+0x96>
 216:	37 c0       	rjmp	.+110    	; 0x286 <__vector_9+0x10a>
		case 4: SPDR = mass[r4]; while(!(SPSR & (1<<SPIF))); SPDR = 0b00000010; while(!(SPSR & (1<<SPIF))); break;
 218:	e0 91 77 00 	lds	r30, 0x0077
 21c:	f0 e0       	ldi	r31, 0x00	; 0
 21e:	e0 5a       	subi	r30, 0xA0	; 160
 220:	ff 4f       	sbci	r31, 0xFF	; 255
 222:	80 81       	ld	r24, Z
 224:	8f b9       	out	0x0f, r24	; 15
 226:	77 9b       	sbis	0x0e, 7	; 14
 228:	fe cf       	rjmp	.-4      	; 0x226 <__vector_9+0xaa>
 22a:	82 e0       	ldi	r24, 0x02	; 2
 22c:	8f b9       	out	0x0f, r24	; 15
 22e:	77 9b       	sbis	0x0e, 7	; 14
 230:	fe cf       	rjmp	.-4      	; 0x22e <__vector_9+0xb2>
 232:	29 c0       	rjmp	.+82     	; 0x286 <__vector_9+0x10a>
		case 5: SPDR = mass[r5]; while(!(SPSR & (1<<SPIF))); SPDR = 0b00000100; while(!(SPSR & (1<<SPIF))); break;
 234:	e0 91 76 00 	lds	r30, 0x0076
 238:	f0 e0       	ldi	r31, 0x00	; 0
 23a:	e0 5a       	subi	r30, 0xA0	; 160
 23c:	ff 4f       	sbci	r31, 0xFF	; 255
 23e:	80 81       	ld	r24, Z
 240:	8f b9       	out	0x0f, r24	; 15
 242:	77 9b       	sbis	0x0e, 7	; 14
 244:	fe cf       	rjmp	.-4      	; 0x242 <__vector_9+0xc6>
 246:	84 e0       	ldi	r24, 0x04	; 4
 248:	8f b9       	out	0x0f, r24	; 15
 24a:	77 9b       	sbis	0x0e, 7	; 14
 24c:	fe cf       	rjmp	.-4      	; 0x24a <__vector_9+0xce>
 24e:	1b c0       	rjmp	.+54     	; 0x286 <__vector_9+0x10a>
		case 6: SPDR = mass[r6]; while(!(SPSR & (1<<SPIF))); SPDR = 0b00001000; while(!(SPSR & (1<<SPIF))); break;
 250:	e0 91 75 00 	lds	r30, 0x0075
 254:	f0 e0       	ldi	r31, 0x00	; 0
 256:	e0 5a       	subi	r30, 0xA0	; 160
 258:	ff 4f       	sbci	r31, 0xFF	; 255
 25a:	80 81       	ld	r24, Z
 25c:	8f b9       	out	0x0f, r24	; 15
 25e:	77 9b       	sbis	0x0e, 7	; 14
 260:	fe cf       	rjmp	.-4      	; 0x25e <__vector_9+0xe2>
 262:	88 e0       	ldi	r24, 0x08	; 8
 264:	8f b9       	out	0x0f, r24	; 15
 266:	77 9b       	sbis	0x0e, 7	; 14
 268:	fe cf       	rjmp	.-4      	; 0x266 <__vector_9+0xea>
 26a:	0d c0       	rjmp	.+26     	; 0x286 <__vector_9+0x10a>
		case 7: SPDR = mass[r7]; while(!(SPSR & (1<<SPIF))); SPDR = 0b00000001; while(!(SPSR & (1<<SPIF))); break;
 26c:	e0 91 74 00 	lds	r30, 0x0074
 270:	f0 e0       	ldi	r31, 0x00	; 0
 272:	e0 5a       	subi	r30, 0xA0	; 160
 274:	ff 4f       	sbci	r31, 0xFF	; 255
 276:	80 81       	ld	r24, Z
 278:	8f b9       	out	0x0f, r24	; 15
 27a:	77 9b       	sbis	0x0e, 7	; 14
 27c:	fe cf       	rjmp	.-4      	; 0x27a <__vector_9+0xfe>
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	8f b9       	out	0x0f, r24	; 15
 282:	77 9b       	sbis	0x0e, 7	; 14
 284:	fe cf       	rjmp	.-4      	; 0x282 <__vector_9+0x106>
	}
	PORTB |= 1<<2;
 286:	c2 9a       	sbi	0x18, 2	; 24
	PORTB &= ~1<<2;
 288:	88 b3       	in	r24, 0x18	; 24
 28a:	88 7f       	andi	r24, 0xF8	; 248
 28c:	88 bb       	out	0x18, r24	; 24
	i++;
 28e:	80 91 7c 00 	lds	r24, 0x007C
 292:	8f 5f       	subi	r24, 0xFF	; 255
	if (i > 7) i = 0;
 294:	88 30       	cpi	r24, 0x08	; 8
 296:	18 f4       	brcc	.+6      	; 0x29e <__vector_9+0x122>
		case 6: SPDR = mass[r6]; while(!(SPSR & (1<<SPIF))); SPDR = 0b00001000; while(!(SPSR & (1<<SPIF))); break;
		case 7: SPDR = mass[r7]; while(!(SPSR & (1<<SPIF))); SPDR = 0b00000001; while(!(SPSR & (1<<SPIF))); break;
	}
	PORTB |= 1<<2;
	PORTB &= ~1<<2;
	i++;
 298:	80 93 7c 00 	sts	0x007C, r24
 29c:	02 c0       	rjmp	.+4      	; 0x2a2 <__vector_9+0x126>
	if (i > 7) i = 0;
 29e:	10 92 7c 00 	sts	0x007C, r1
}
 2a2:	ff 91       	pop	r31
 2a4:	ef 91       	pop	r30
 2a6:	bf 91       	pop	r27
 2a8:	af 91       	pop	r26
 2aa:	9f 91       	pop	r25
 2ac:	8f 91       	pop	r24
 2ae:	0f 90       	pop	r0
 2b0:	0f be       	out	0x3f, r0	; 63
 2b2:	0f 90       	pop	r0
 2b4:	1f 90       	pop	r1
 2b6:	18 95       	reti

000002b8 <__vector_6>:


ISR (TIMER1_COMPA_vect) {
 2b8:	1f 92       	push	r1
 2ba:	0f 92       	push	r0
 2bc:	0f b6       	in	r0, 0x3f	; 63
 2be:	0f 92       	push	r0
 2c0:	11 24       	eor	r1, r1
 2c2:	cf 92       	push	r12
 2c4:	df 92       	push	r13
 2c6:	ef 92       	push	r14
 2c8:	ff 92       	push	r15
 2ca:	2f 93       	push	r18
 2cc:	3f 93       	push	r19
 2ce:	4f 93       	push	r20
 2d0:	5f 93       	push	r21
 2d2:	6f 93       	push	r22
 2d4:	7f 93       	push	r23
 2d6:	8f 93       	push	r24
 2d8:	9f 93       	push	r25
 2da:	af 93       	push	r26
 2dc:	bf 93       	push	r27
	PORTD ^= 1<<6;
 2de:	92 b3       	in	r25, 0x12	; 18
 2e0:	80 e4       	ldi	r24, 0x40	; 64
 2e2:	89 27       	eor	r24, r25
 2e4:	82 bb       	out	0x12, r24	; 18
	qty_now++;
 2e6:	80 91 7d 00 	lds	r24, 0x007D
 2ea:	90 91 7e 00 	lds	r25, 0x007E
 2ee:	a0 91 7f 00 	lds	r26, 0x007F
 2f2:	b0 91 80 00 	lds	r27, 0x0080
 2f6:	01 96       	adiw	r24, 0x01	; 1
 2f8:	a1 1d       	adc	r26, r1
 2fa:	b1 1d       	adc	r27, r1
 2fc:	80 93 7d 00 	sts	0x007D, r24
 300:	90 93 7e 00 	sts	0x007E, r25
 304:	a0 93 7f 00 	sts	0x007F, r26
 308:	b0 93 80 00 	sts	0x0080, r27
	if (qty_now >= qty*1600) TIMSK &= ~(1<<7 | 1<<4); //qty*1600
 30c:	20 91 6a 00 	lds	r18, 0x006A
 310:	30 91 6b 00 	lds	r19, 0x006B
 314:	40 91 6c 00 	lds	r20, 0x006C
 318:	50 91 6d 00 	lds	r21, 0x006D
 31c:	c0 90 7d 00 	lds	r12, 0x007D
 320:	d0 90 7e 00 	lds	r13, 0x007E
 324:	e0 90 7f 00 	lds	r14, 0x007F
 328:	f0 90 80 00 	lds	r15, 0x0080
 32c:	a0 e4       	ldi	r26, 0x40	; 64
 32e:	b6 e0       	ldi	r27, 0x06	; 6
 330:	48 d0       	rcall	.+144    	; 0x3c2 <__muluhisi3>
 332:	c6 16       	cp	r12, r22
 334:	d7 06       	cpc	r13, r23
 336:	e8 06       	cpc	r14, r24
 338:	f9 06       	cpc	r15, r25
 33a:	18 f0       	brcs	.+6      	; 0x342 <__vector_6+0x8a>
 33c:	89 b7       	in	r24, 0x39	; 57
 33e:	8f 76       	andi	r24, 0x6F	; 111
 340:	89 bf       	out	0x39, r24	; 57
}
 342:	bf 91       	pop	r27
 344:	af 91       	pop	r26
 346:	9f 91       	pop	r25
 348:	8f 91       	pop	r24
 34a:	7f 91       	pop	r23
 34c:	6f 91       	pop	r22
 34e:	5f 91       	pop	r21
 350:	4f 91       	pop	r20
 352:	3f 91       	pop	r19
 354:	2f 91       	pop	r18
 356:	ff 90       	pop	r15
 358:	ef 90       	pop	r14
 35a:	df 90       	pop	r13
 35c:	cf 90       	pop	r12
 35e:	0f 90       	pop	r0
 360:	0f be       	out	0x3f, r0	; 63
 362:	0f 90       	pop	r0
 364:	1f 90       	pop	r1
 366:	18 95       	reti

00000368 <__vector_3>:


ISR (TIMER2_COMP_vect) {
 368:	1f 92       	push	r1
 36a:	0f 92       	push	r0
 36c:	0f b6       	in	r0, 0x3f	; 63
 36e:	0f 92       	push	r0
 370:	11 24       	eor	r1, r1
 372:	8f 93       	push	r24
 374:	9f 93       	push	r25
	PORTD ^= 1<<7;
 376:	82 b3       	in	r24, 0x12	; 18
 378:	80 58       	subi	r24, 0x80	; 128
 37a:	82 bb       	out	0x12, r24	; 18
	kv++;
 37c:	80 91 6e 00 	lds	r24, 0x006E
 380:	90 91 6f 00 	lds	r25, 0x006F
 384:	01 96       	adiw	r24, 0x01	; 1
 386:	90 93 6f 00 	sts	0x006F, r25
 38a:	80 93 6e 00 	sts	0x006E, r24
}
 38e:	9f 91       	pop	r25
 390:	8f 91       	pop	r24
 392:	0f 90       	pop	r0
 394:	0f be       	out	0x3f, r0	; 63
 396:	0f 90       	pop	r0
 398:	1f 90       	pop	r1
 39a:	18 95       	reti

0000039c <__divmodhi4>:
 39c:	97 fb       	bst	r25, 7
 39e:	07 2e       	mov	r0, r23
 3a0:	16 f4       	brtc	.+4      	; 0x3a6 <__divmodhi4+0xa>
 3a2:	00 94       	com	r0
 3a4:	06 d0       	rcall	.+12     	; 0x3b2 <__divmodhi4_neg1>
 3a6:	77 fd       	sbrc	r23, 7
 3a8:	08 d0       	rcall	.+16     	; 0x3ba <__divmodhi4_neg2>
 3aa:	15 d0       	rcall	.+42     	; 0x3d6 <__udivmodhi4>
 3ac:	07 fc       	sbrc	r0, 7
 3ae:	05 d0       	rcall	.+10     	; 0x3ba <__divmodhi4_neg2>
 3b0:	3e f4       	brtc	.+14     	; 0x3c0 <__divmodhi4_exit>

000003b2 <__divmodhi4_neg1>:
 3b2:	90 95       	com	r25
 3b4:	81 95       	neg	r24
 3b6:	9f 4f       	sbci	r25, 0xFF	; 255
 3b8:	08 95       	ret

000003ba <__divmodhi4_neg2>:
 3ba:	70 95       	com	r23
 3bc:	61 95       	neg	r22
 3be:	7f 4f       	sbci	r23, 0xFF	; 255

000003c0 <__divmodhi4_exit>:
 3c0:	08 95       	ret

000003c2 <__muluhisi3>:
 3c2:	1d d0       	rcall	.+58     	; 0x3fe <__umulhisi3>
 3c4:	a5 9f       	mul	r26, r21
 3c6:	90 0d       	add	r25, r0
 3c8:	b4 9f       	mul	r27, r20
 3ca:	90 0d       	add	r25, r0
 3cc:	a4 9f       	mul	r26, r20
 3ce:	80 0d       	add	r24, r0
 3d0:	91 1d       	adc	r25, r1
 3d2:	11 24       	eor	r1, r1
 3d4:	08 95       	ret

000003d6 <__udivmodhi4>:
 3d6:	aa 1b       	sub	r26, r26
 3d8:	bb 1b       	sub	r27, r27
 3da:	51 e1       	ldi	r21, 0x11	; 17
 3dc:	07 c0       	rjmp	.+14     	; 0x3ec <__udivmodhi4_ep>

000003de <__udivmodhi4_loop>:
 3de:	aa 1f       	adc	r26, r26
 3e0:	bb 1f       	adc	r27, r27
 3e2:	a6 17       	cp	r26, r22
 3e4:	b7 07       	cpc	r27, r23
 3e6:	10 f0       	brcs	.+4      	; 0x3ec <__udivmodhi4_ep>
 3e8:	a6 1b       	sub	r26, r22
 3ea:	b7 0b       	sbc	r27, r23

000003ec <__udivmodhi4_ep>:
 3ec:	88 1f       	adc	r24, r24
 3ee:	99 1f       	adc	r25, r25
 3f0:	5a 95       	dec	r21
 3f2:	a9 f7       	brne	.-22     	; 0x3de <__udivmodhi4_loop>
 3f4:	80 95       	com	r24
 3f6:	90 95       	com	r25
 3f8:	bc 01       	movw	r22, r24
 3fa:	cd 01       	movw	r24, r26
 3fc:	08 95       	ret

000003fe <__umulhisi3>:
 3fe:	a2 9f       	mul	r26, r18
 400:	b0 01       	movw	r22, r0
 402:	b3 9f       	mul	r27, r19
 404:	c0 01       	movw	r24, r0
 406:	a3 9f       	mul	r26, r19
 408:	01 d0       	rcall	.+2      	; 0x40c <__umulhisi3+0xe>
 40a:	b2 9f       	mul	r27, r18
 40c:	70 0d       	add	r23, r0
 40e:	81 1d       	adc	r24, r1
 410:	11 24       	eor	r1, r1
 412:	91 1d       	adc	r25, r1
 414:	08 95       	ret

00000416 <_exit>:
 416:	f8 94       	cli

00000418 <__stop_program>:
 418:	ff cf       	rjmp	.-2      	; 0x418 <__stop_program>
