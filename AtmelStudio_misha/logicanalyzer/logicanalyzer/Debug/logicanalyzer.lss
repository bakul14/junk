
logicanalyzer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000bc  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  00000110  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000020  00000000  00000000  00000140  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000007b  00000000  00000000  00000160  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000044  00000000  00000000  000001db  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000067  00000000  00000000  0000021f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000024  00000000  00000000  00000288  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000013f  00000000  00000000  000002ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00000010  00000000  00000000  000003eb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	02 d0       	rcall	.+4      	; 0x38 <main>
  34:	41 c0       	rjmp	.+130    	; 0xb8 <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <main>:

#include <avr/io.h>

int main(void)
{
   DDRB = 0xff;
  38:	8f ef       	ldi	r24, 0xFF	; 255
  3a:	87 bb       	out	0x17, r24	; 23
   DDRC = 0xff;
  3c:	84 bb       	out	0x14, r24	; 20
   DDRD = 0xff;
  3e:	81 bb       	out	0x11, r24	; 17
   
   
   PORTD |= 1<<0;
  40:	90 9a       	sbi	0x12, 0	; 18
   PORTD |= 1<<1;
  42:	91 9a       	sbi	0x12, 1	; 18
   PORTD |= 1<<2;
  44:	92 9a       	sbi	0x12, 2	; 18
   PORTD |= 1<<3;
  46:	93 9a       	sbi	0x12, 3	; 18
   PORTD |= 1<<4;
  48:	94 9a       	sbi	0x12, 4	; 18
   PORTD |= 1<<5;
  4a:	95 9a       	sbi	0x12, 5	; 18
   PORTD |= 1<<6;
  4c:	96 9a       	sbi	0x12, 6	; 18
   PORTD |= 1<<7;
  4e:	97 9a       	sbi	0x12, 7	; 18
   
   PORTB |= 1<<0;
  50:	c0 9a       	sbi	0x18, 0	; 24
   PORTB |= 1<<1;
  52:	c1 9a       	sbi	0x18, 1	; 24
   PORTB |= 1<<2;
  54:	c2 9a       	sbi	0x18, 2	; 24
   PORTB |= 1<<3;
  56:	c3 9a       	sbi	0x18, 3	; 24
   PORTB |= 1<<4;
  58:	c4 9a       	sbi	0x18, 4	; 24
   PORTB |= 1<<5;
  5a:	c5 9a       	sbi	0x18, 5	; 24
   
   PORTC |= 1<<0;
  5c:	a8 9a       	sbi	0x15, 0	; 21
   PORTC |= 1<<1;
  5e:	a9 9a       	sbi	0x15, 1	; 21
 
//--------------------------  
   
   PORTD &= ~1<<0;
  60:	90 98       	cbi	0x12, 0	; 18
   PORTD &= ~1<<1;
  62:	82 b3       	in	r24, 0x12	; 18
  64:	8c 7f       	andi	r24, 0xFC	; 252
  66:	82 bb       	out	0x12, r24	; 18
   PORTD &= ~1<<2;
  68:	82 b3       	in	r24, 0x12	; 18
  6a:	88 7f       	andi	r24, 0xF8	; 248
  6c:	82 bb       	out	0x12, r24	; 18
   PORTD &= ~1<<3;
  6e:	82 b3       	in	r24, 0x12	; 18
  70:	80 7f       	andi	r24, 0xF0	; 240
  72:	82 bb       	out	0x12, r24	; 18
   PORTD &= ~1<<4;
  74:	82 b3       	in	r24, 0x12	; 18
  76:	80 7e       	andi	r24, 0xE0	; 224
  78:	82 bb       	out	0x12, r24	; 18
   PORTD &= ~1<<5;
  7a:	82 b3       	in	r24, 0x12	; 18
  7c:	80 7c       	andi	r24, 0xC0	; 192
  7e:	82 bb       	out	0x12, r24	; 18
   PORTD &= ~1<<6;
  80:	82 b3       	in	r24, 0x12	; 18
  82:	80 78       	andi	r24, 0x80	; 128
  84:	82 bb       	out	0x12, r24	; 18
   PORTD &= ~1<<7;
  86:	82 b3       	in	r24, 0x12	; 18
  88:	12 ba       	out	0x12, r1	; 18
   
   PORTB &= ~1<<0;
  8a:	c0 98       	cbi	0x18, 0	; 24
   PORTB &= ~1<<1;
  8c:	88 b3       	in	r24, 0x18	; 24
  8e:	8c 7f       	andi	r24, 0xFC	; 252
  90:	88 bb       	out	0x18, r24	; 24
   PORTB &= ~1<<2;
  92:	88 b3       	in	r24, 0x18	; 24
  94:	88 7f       	andi	r24, 0xF8	; 248
  96:	88 bb       	out	0x18, r24	; 24
   PORTB &= ~1<<3;
  98:	88 b3       	in	r24, 0x18	; 24
  9a:	80 7f       	andi	r24, 0xF0	; 240
  9c:	88 bb       	out	0x18, r24	; 24
   PORTB &= ~1<<4;
  9e:	88 b3       	in	r24, 0x18	; 24
  a0:	80 7e       	andi	r24, 0xE0	; 224
  a2:	88 bb       	out	0x18, r24	; 24
   PORTB &= ~1<<5;
  a4:	88 b3       	in	r24, 0x18	; 24
  a6:	80 7c       	andi	r24, 0xC0	; 192
  a8:	88 bb       	out	0x18, r24	; 24
   
   PORTC &= ~1<<0;
  aa:	a8 98       	cbi	0x15, 0	; 21
   PORTC &= ~1<<1;  
  ac:	85 b3       	in	r24, 0x15	; 21
  ae:	8c 7f       	andi	r24, 0xFC	; 252
  b0:	85 bb       	out	0x15, r24	; 21
       
}
  b2:	80 e0       	ldi	r24, 0x00	; 0
  b4:	90 e0       	ldi	r25, 0x00	; 0
  b6:	08 95       	ret

000000b8 <_exit>:
  b8:	f8 94       	cli

000000ba <__stop_program>:
  ba:	ff cf       	rjmp	.-2      	; 0xba <__stop_program>
