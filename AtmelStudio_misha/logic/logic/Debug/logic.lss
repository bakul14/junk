
logic.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000005c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  000000b0  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000020  00000000  00000000  000000e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000007b  00000000  00000000  00000100  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 00000044  00000000  00000000  0000017b  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000049  00000000  00000000  000001bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000024  00000000  00000000  00000208  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000127  00000000  00000000  0000022c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00000010  00000000  00000000  00000353  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	19 c0       	rjmp	.+50     	; 0x36 <__bad_interrupt>
   4:	18 c0       	rjmp	.+48     	; 0x36 <__bad_interrupt>
   6:	17 c0       	rjmp	.+46     	; 0x36 <__bad_interrupt>
   8:	16 c0       	rjmp	.+44     	; 0x36 <__bad_interrupt>
   a:	15 c0       	rjmp	.+42     	; 0x36 <__bad_interrupt>
   c:	14 c0       	rjmp	.+40     	; 0x36 <__bad_interrupt>
   e:	13 c0       	rjmp	.+38     	; 0x36 <__bad_interrupt>
  10:	12 c0       	rjmp	.+36     	; 0x36 <__bad_interrupt>
  12:	11 c0       	rjmp	.+34     	; 0x36 <__bad_interrupt>
  14:	10 c0       	rjmp	.+32     	; 0x36 <__bad_interrupt>
  16:	0f c0       	rjmp	.+30     	; 0x36 <__bad_interrupt>
  18:	0e c0       	rjmp	.+28     	; 0x36 <__bad_interrupt>
  1a:	0d c0       	rjmp	.+26     	; 0x36 <__bad_interrupt>
  1c:	0c c0       	rjmp	.+24     	; 0x36 <__bad_interrupt>
  1e:	0b c0       	rjmp	.+22     	; 0x36 <__bad_interrupt>
  20:	0a c0       	rjmp	.+20     	; 0x36 <__bad_interrupt>
  22:	09 c0       	rjmp	.+18     	; 0x36 <__bad_interrupt>
  24:	08 c0       	rjmp	.+16     	; 0x36 <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61
  32:	02 d0       	rcall	.+4      	; 0x38 <main>
  34:	11 c0       	rjmp	.+34     	; 0x58 <_exit>

00000036 <__bad_interrupt>:
  36:	e4 cf       	rjmp	.-56     	; 0x0 <__vectors>

00000038 <main>:

#include <avr/io.h>

int main(void)
{
	DDRD |= 1<<0;
  38:	88 9a       	sbi	0x11, 0	; 17
	
	PORTD |= 1<<0;
  3a:	90 9a       	sbi	0x12, 0	; 18
	PORTD &= ~1<<0;
  3c:	90 98       	cbi	0x12, 0	; 18
	
	PORTD |= 1<<0;
  3e:	90 9a       	sbi	0x12, 0	; 18
	PORTD &= ~1<<0;
  40:	90 98       	cbi	0x12, 0	; 18
	
	PORTD |= 1<<0;
  42:	90 9a       	sbi	0x12, 0	; 18
	PORTD &= ~1<<0;
  44:	90 98       	cbi	0x12, 0	; 18
	
	PORTD |= 1<<0;
  46:	90 9a       	sbi	0x12, 0	; 18
	PORTD &= ~1<<0;
  48:	90 98       	cbi	0x12, 0	; 18
	
	PORTD |= 1<<0;
  4a:	90 9a       	sbi	0x12, 0	; 18
	PORTD &= ~1<<0;
  4c:	90 98       	cbi	0x12, 0	; 18
	
	PORTD |= 1<<0;
  4e:	90 9a       	sbi	0x12, 0	; 18
	PORTD &= ~1<<0;
  50:	90 98       	cbi	0x12, 0	; 18
  52:	80 e0       	ldi	r24, 0x00	; 0
  54:	90 e0       	ldi	r25, 0x00	; 0
  56:	08 95       	ret

00000058 <_exit>:
  58:	f8 94       	cli

0000005a <__stop_program>:
  5a:	ff cf       	rjmp	.-2      	; 0x5a <__stop_program>
