
74hc595.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000006de  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000024  00800060  000006de  00000772  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000f  00800084  00800084  00000796  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000796  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000038  00000000  00000000  000007c6  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000002ac  00000000  00000000  000007fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000000d2  00000000  00000000  00000aaa  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000161  00000000  00000000  00000b7c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f0  00000000  00000000  00000ce0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001b4  00000000  00000000  00000dd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000237  00000000  00000000  00000f84  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000028  00000000  00000000  000011bb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	aa c1       	rjmp	.+852    	; 0x358 <__vector_1>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	3d c1       	rjmp	.+634    	; 0x28e <__vector_9>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	c6 c1       	rjmp	.+908    	; 0x3aa <__vector_14>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	ee ed       	ldi	r30, 0xDE	; 222
  3a:	f6 e0       	ldi	r31, 0x06	; 6
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a4 38       	cpi	r26, 0x84	; 132
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	20 e0       	ldi	r18, 0x00	; 0
  4a:	a4 e8       	ldi	r26, 0x84	; 132
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a3 39       	cpi	r26, 0x93	; 147
  54:	b2 07       	cpc	r27, r18
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	02 d0       	rcall	.+4      	; 0x5e <main>
  5a:	3f c3       	rjmp	.+1662   	; 0x6da <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <main>:



	
	
	ADMUX = 0b01000010;
  5e:	82 e4       	ldi	r24, 0x42	; 66
  60:	87 b9       	out	0x07, r24	; 7
	ADCSRA = 0b11001100;
  62:	8c ec       	ldi	r24, 0xCC	; 204
  64:	86 b9       	out	0x06, r24	; 6
	
	DDRB |= ((1<<3)|(1<<2)|(1<<5));         //ножки_SPI_на_выход
  66:	87 b3       	in	r24, 0x17	; 23
  68:	8c 62       	ori	r24, 0x2C	; 44
  6a:	87 bb       	out	0x17, r24	; 23
	PORTB &= ~((1<<3)|(1<<2)|(1<<5));       //сбрасываем состояние ножек шины SPI
  6c:	88 b3       	in	r24, 0x18	; 24
  6e:	83 7d       	andi	r24, 0xD3	; 211
  70:	88 bb       	out	0x18, r24	; 24
	SPCR = 0b01010000;                      //включить_шину SPI, режим_MASTER_(ведущий)
  72:	80 e5       	ldi	r24, 0x50	; 80
  74:	8d b9       	out	0x0d, r24	; 13
	
	DDRD &= ~(1<<7 | 1<<6 | 1<<5); // кнопки
  76:	81 b3       	in	r24, 0x11	; 17
  78:	8f 71       	andi	r24, 0x1F	; 31
  7a:	81 bb       	out	0x11, r24	; 17
	PORTD |= 1<<7 | 1<<6 | 1<<5; // кнопки подтянуть к +
  7c:	82 b3       	in	r24, 0x12	; 18
  7e:	80 6e       	ori	r24, 0xE0	; 224
  80:	82 bb       	out	0x12, r24	; 18
	DDRD |= 1<<0; // фара
  82:	88 9a       	sbi	0x11, 0	; 17

	TCCR1A = 0b10000010;
  84:	82 e8       	ldi	r24, 0x82	; 130
  86:	8f bd       	out	0x2f, r24	; 47
	TCCR1B = 0b00010001; //  clk/1
  88:	81 e1       	ldi	r24, 0x11	; 17
  8a:	8e bd       	out	0x2e, r24	; 46
	ICR1 = 20000;
  8c:	80 e2       	ldi	r24, 0x20	; 32
  8e:	9e e4       	ldi	r25, 0x4E	; 78
  90:	97 bd       	out	0x27, r25	; 39
  92:	86 bd       	out	0x26, r24	; 38
	
	DDRB |= 1<<1; // газ
  94:	b9 9a       	sbi	0x17, 1	; 23
	
	DDRC &= ~(1<<0 | 1<<1 | 1<<2);
  96:	84 b3       	in	r24, 0x14	; 20
  98:	88 7f       	andi	r24, 0xF8	; 248
  9a:	84 bb       	out	0x14, r24	; 20
	
	TCCR0 = 0b00000101; // clk/1024
  9c:	85 e0       	ldi	r24, 0x05	; 5
  9e:	83 bf       	out	0x33, r24	; 51
	TCNT0 = 0;
  a0:	12 be       	out	0x32, r1	; 50
	TCCR2 = 0b00000101; // clk/1024
  a2:	85 bd       	out	0x25, r24	; 37
	TCNT2 = 0;
  a4:	14 bc       	out	0x24, r1	; 36
	SREG |= 1<<7; //разрешить_глобальные_прерывания
  a6:	8f b7       	in	r24, 0x3f	; 63
  a8:	80 68       	ori	r24, 0x80	; 128
  aa:	8f bf       	out	0x3f, r24	; 63
	TIMSK |= 1<<0; //вкл_прерывания_по_переполнению_таймера0
  ac:	89 b7       	in	r24, 0x39	; 57
  ae:	81 60       	ori	r24, 0x01	; 1
  b0:	89 bf       	out	0x39, r24	; 57


	
	GICR = 0b01000000; // enable interrupt int0
  b2:	80 e4       	ldi	r24, 0x40	; 64
  b4:	8b bf       	out	0x3b, r24	; 59
	MCUCR = 0b00000010; // falling, int0
  b6:	82 e0       	ldi	r24, 0x02	; 2
  b8:	85 bf       	out	0x35, r24	; 53
	
	for (a = 0; a<5; a++) {
  ba:	10 92 8a 00 	sts	0x008A, r1
		SPDR = 0xff;
  be:	9f ef       	ldi	r25, 0xFF	; 255
  c0:	9f b9       	out	0x0f, r25	; 15
		while(!(SPSR & (1<<SPIF)));
  c2:	77 9b       	sbis	0x0e, 7	; 14
  c4:	fe cf       	rjmp	.-4      	; 0xc2 <main+0x64>
		PORTB |= (1<<2); //enter
  c6:	c2 9a       	sbi	0x18, 2	; 24
		PORTB &= ~(1<<2); //enter
  c8:	c2 98       	cbi	0x18, 2	; 24

	
	GICR = 0b01000000; // enable interrupt int0
	MCUCR = 0b00000010; // falling, int0
	
	for (a = 0; a<5; a++) {
  ca:	80 91 8a 00 	lds	r24, 0x008A
  ce:	8f 5f       	subi	r24, 0xFF	; 255
  d0:	80 93 8a 00 	sts	0x008A, r24
  d4:	85 30       	cpi	r24, 0x05	; 5
  d6:	a0 f3       	brcs	.-24     	; 0xc0 <main+0x62>
  d8:	c0 e0       	ldi	r28, 0x00	; 0
  da:	d0 e0       	ldi	r29, 0x00	; 0
  dc:	00 e0       	ldi	r16, 0x00	; 0
  de:	11 e0       	ldi	r17, 0x01	; 1
	while(1)
	{
		
		if (!(PIND & 1<<7) && flag1 == 0) {
			light++;
			flag1 = 1;
  e0:	77 24       	eor	r7, r7
  e2:	73 94       	inc	r7
		}
		if (light > 2) light = 0;
  e4:	61 2c       	mov	r6, r1
			case 2:
			q = mileage_now;
			dp2 = 1; dp3 = 0;
			break;
			
			case 3: q = 3; break;
  e6:	0f 2e       	mov	r0, r31
  e8:	f3 e0       	ldi	r31, 0x03	; 3
  ea:	af 2e       	mov	r10, r31
  ec:	b1 2c       	mov	r11, r1
  ee:	f0 2d       	mov	r31, r0
			case 4: q = 4; break;
  f0:	68 94       	set
  f2:	cc 24       	eor	r12, r12
  f4:	c2 f8       	bld	r12, 2
  f6:	d1 2c       	mov	r13, r1
		if (TCNT2 > 250) v = 0;
		mileage_now = hz * 0.002; // пробег в сотнях метров, 4 магнита, колесо 10 дюймов
		
		r1 = v*0.1;
		r2 = q*0.01;
		r3 = q%100*0.1;
  f8:	0f 2e       	mov	r0, r31
  fa:	f4 e6       	ldi	r31, 0x64	; 100
  fc:	ef 2e       	mov	r14, r31
  fe:	f1 2c       	mov	r15, r1
 100:	f0 2d       	mov	r31, r0
		r4 = q%10;
 102:	0f 2e       	mov	r0, r31
 104:	fa e0       	ldi	r31, 0x0A	; 10
 106:	8f 2e       	mov	r8, r31
 108:	91 2c       	mov	r9, r1
 10a:	f0 2d       	mov	r31, r0
		r5 = v%10;
 10c:	0f 2e       	mov	r0, r31
 10e:	fd ec       	ldi	r31, 0xCD	; 205
 110:	5f 2e       	mov	r5, r31
 112:	f0 2d       	mov	r31, r0
	
	
	while(1)
	{
		
		if (!(PIND & 1<<7) && flag1 == 0) {
 114:	87 99       	sbic	0x10, 7	; 16
 116:	05 c0       	rjmp	.+10     	; 0x122 <main+0xc4>
 118:	80 91 87 00 	lds	r24, 0x0087
 11c:	88 23       	and	r24, r24
 11e:	09 f4       	brne	.+2      	; 0x122 <main+0xc4>
 120:	ae c0       	rjmp	.+348    	; 0x27e <main+0x220>
			light++;
			flag1 = 1;
		}
		if (light > 2) light = 0;
 122:	03 30       	cpi	r16, 0x03	; 3
 124:	08 f0       	brcs	.+2      	; 0x128 <main+0xca>
 126:	06 2d       	mov	r16, r6


		if (!(PIND & 1<<6) && flag2 == 0) {
 128:	86 99       	sbic	0x10, 6	; 16
 12a:	05 c0       	rjmp	.+10     	; 0x136 <main+0xd8>
 12c:	80 91 86 00 	lds	r24, 0x0086
 130:	88 23       	and	r24, r24
 132:	09 f4       	brne	.+2      	; 0x136 <main+0xd8>
 134:	a8 c0       	rjmp	.+336    	; 0x286 <main+0x228>
			mode++;
			flag2 = 1;
		}
		if (mode > 5) mode = 1;
 136:	16 30       	cpi	r17, 0x06	; 6
 138:	08 f0       	brcs	.+2      	; 0x13c <main+0xde>
 13a:	17 2d       	mov	r17, r7

		
		switch (light)
 13c:	01 30       	cpi	r16, 0x01	; 1
 13e:	31 f0       	breq	.+12     	; 0x14c <main+0xee>
 140:	18 f0       	brcs	.+6      	; 0x148 <main+0xea>
 142:	02 30       	cpi	r16, 0x02	; 2
 144:	39 f0       	breq	.+14     	; 0x154 <main+0xf6>
 146:	07 c0       	rjmp	.+14     	; 0x156 <main+0xf8>
		{
			case 0: PORTD &= ~(1<<0); break;
 148:	90 98       	cbi	0x12, 0	; 18
 14a:	05 c0       	rjmp	.+10     	; 0x156 <main+0xf8>
			case 1: PORTD ^= 1<<0; break;
 14c:	82 b3       	in	r24, 0x12	; 18
 14e:	87 25       	eor	r24, r7
 150:	82 bb       	out	0x12, r24	; 18
 152:	01 c0       	rjmp	.+2      	; 0x156 <main+0xf8>
			case 2: PORTD |= 1<<0; break;
 154:	90 9a       	sbi	0x12, 0	; 18
		}
		
		switch (mode) {
 156:	12 30       	cpi	r17, 0x02	; 2
 158:	09 f1       	breq	.+66     	; 0x19c <main+0x13e>
 15a:	18 f4       	brcc	.+6      	; 0x162 <main+0x104>
 15c:	11 30       	cpi	r17, 0x01	; 1
 15e:	31 f0       	breq	.+12     	; 0x16c <main+0x10e>
 160:	2f c0       	rjmp	.+94     	; 0x1c0 <main+0x162>
 162:	13 30       	cpi	r17, 0x03	; 3
 164:	21 f1       	breq	.+72     	; 0x1ae <main+0x150>
 166:	14 30       	cpi	r17, 0x04	; 4
 168:	39 f1       	breq	.+78     	; 0x1b8 <main+0x15a>
 16a:	2a c0       	rjmp	.+84     	; 0x1c0 <main+0x162>
			case 1:
			dp2 = 1; dp3 = 0; q = voltage*0.1; break;
 16c:	70 92 63 00 	sts	0x0063, r7
 170:	60 92 62 00 	sts	0x0062, r6
 174:	60 91 84 00 	lds	r22, 0x0084
 178:	70 91 85 00 	lds	r23, 0x0085
 17c:	88 27       	eor	r24, r24
 17e:	77 fd       	sbrc	r23, 7
 180:	80 95       	com	r24
 182:	98 2f       	mov	r25, r24
 184:	94 d1       	rcall	.+808    	; 0x4ae <__floatsisf>
 186:	2d ec       	ldi	r18, 0xCD	; 205
 188:	3c ec       	ldi	r19, 0xCC	; 204
 18a:	4c ec       	ldi	r20, 0xCC	; 204
 18c:	5d e3       	ldi	r21, 0x3D	; 61
 18e:	f3 d1       	rcall	.+998    	; 0x576 <__mulsf3>
 190:	5b d1       	rcall	.+694    	; 0x448 <__fixsfsi>
 192:	70 93 91 00 	sts	0x0091, r23
 196:	60 93 90 00 	sts	0x0090, r22
 19a:	12 c0       	rjmp	.+36     	; 0x1c0 <main+0x162>

			case 2:
			q = mileage_now;
 19c:	d0 93 91 00 	sts	0x0091, r29
 1a0:	c0 93 90 00 	sts	0x0090, r28
			dp2 = 1; dp3 = 0;
 1a4:	70 92 63 00 	sts	0x0063, r7
 1a8:	60 92 62 00 	sts	0x0062, r6
			break;
 1ac:	09 c0       	rjmp	.+18     	; 0x1c0 <main+0x162>
			
			case 3: q = 3; break;
 1ae:	b0 92 91 00 	sts	0x0091, r11
 1b2:	a0 92 90 00 	sts	0x0090, r10
 1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <main+0x162>
			case 4: q = 4; break;
 1b8:	d0 92 91 00 	sts	0x0091, r13
 1bc:	c0 92 90 00 	sts	0x0090, r12
		}
			
		if (TCNT2 > 250) v = 0;
 1c0:	84 b5       	in	r24, 0x24	; 36
 1c2:	8b 3f       	cpi	r24, 0xFB	; 251
 1c4:	10 f0       	brcs	.+4      	; 0x1ca <main+0x16c>
 1c6:	60 92 92 00 	sts	0x0092, r6
		mileage_now = hz * 0.002; // пробег в сотнях метров, 4 магнита, колесо 10 дюймов
 1ca:	60 91 88 00 	lds	r22, 0x0088
 1ce:	70 91 89 00 	lds	r23, 0x0089
 1d2:	80 e0       	ldi	r24, 0x00	; 0
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	69 d1       	rcall	.+722    	; 0x4aa <__floatunsisf>
 1d8:	2f e6       	ldi	r18, 0x6F	; 111
 1da:	32 e1       	ldi	r19, 0x12	; 18
 1dc:	43 e0       	ldi	r20, 0x03	; 3
 1de:	5b e3       	ldi	r21, 0x3B	; 59
 1e0:	ca d1       	rcall	.+916    	; 0x576 <__mulsf3>
 1e2:	32 d1       	rcall	.+612    	; 0x448 <__fixsfsi>
 1e4:	eb 01       	movw	r28, r22
		
		r1 = v*0.1;
 1e6:	60 91 92 00 	lds	r22, 0x0092
 1ea:	70 e0       	ldi	r23, 0x00	; 0
 1ec:	80 e0       	ldi	r24, 0x00	; 0
 1ee:	90 e0       	ldi	r25, 0x00	; 0
 1f0:	5e d1       	rcall	.+700    	; 0x4ae <__floatsisf>
 1f2:	2d ec       	ldi	r18, 0xCD	; 205
 1f4:	3c ec       	ldi	r19, 0xCC	; 204
 1f6:	4c ec       	ldi	r20, 0xCC	; 204
 1f8:	5d e3       	ldi	r21, 0x3D	; 61
 1fa:	bd d1       	rcall	.+890    	; 0x576 <__mulsf3>
 1fc:	2a d1       	rcall	.+596    	; 0x452 <__fixunssfsi>
 1fe:	60 93 8f 00 	sts	0x008F, r22
		r2 = q*0.01;
 202:	60 91 90 00 	lds	r22, 0x0090
 206:	70 91 91 00 	lds	r23, 0x0091
 20a:	88 27       	eor	r24, r24
 20c:	77 fd       	sbrc	r23, 7
 20e:	80 95       	com	r24
 210:	98 2f       	mov	r25, r24
 212:	4d d1       	rcall	.+666    	; 0x4ae <__floatsisf>
 214:	2a e0       	ldi	r18, 0x0A	; 10
 216:	37 ed       	ldi	r19, 0xD7	; 215
 218:	43 e2       	ldi	r20, 0x23	; 35
 21a:	5c e3       	ldi	r21, 0x3C	; 60
 21c:	ac d1       	rcall	.+856    	; 0x576 <__mulsf3>
 21e:	19 d1       	rcall	.+562    	; 0x452 <__fixunssfsi>
 220:	60 93 8e 00 	sts	0x008E, r22
		r3 = q%100*0.1;
 224:	80 91 90 00 	lds	r24, 0x0090
 228:	90 91 91 00 	lds	r25, 0x0091
 22c:	b7 01       	movw	r22, r14
 22e:	2e d2       	rcall	.+1116   	; 0x68c <__divmodhi4>
 230:	bc 01       	movw	r22, r24
 232:	88 27       	eor	r24, r24
 234:	77 fd       	sbrc	r23, 7
 236:	80 95       	com	r24
 238:	98 2f       	mov	r25, r24
 23a:	39 d1       	rcall	.+626    	; 0x4ae <__floatsisf>
 23c:	2d ec       	ldi	r18, 0xCD	; 205
 23e:	3c ec       	ldi	r19, 0xCC	; 204
 240:	4c ec       	ldi	r20, 0xCC	; 204
 242:	5d e3       	ldi	r21, 0x3D	; 61
 244:	98 d1       	rcall	.+816    	; 0x576 <__mulsf3>
 246:	05 d1       	rcall	.+522    	; 0x452 <__fixunssfsi>
 248:	60 93 8d 00 	sts	0x008D, r22
		r4 = q%10;
 24c:	80 91 90 00 	lds	r24, 0x0090
 250:	90 91 91 00 	lds	r25, 0x0091
 254:	b4 01       	movw	r22, r8
 256:	1a d2       	rcall	.+1076   	; 0x68c <__divmodhi4>
 258:	80 93 8c 00 	sts	0x008C, r24
		r5 = v%10;
 25c:	90 91 92 00 	lds	r25, 0x0092
 260:	95 9d       	mul	r25, r5
 262:	81 2d       	mov	r24, r1
 264:	11 24       	eor	r1, r1
 266:	86 95       	lsr	r24
 268:	86 95       	lsr	r24
 26a:	86 95       	lsr	r24
 26c:	88 0f       	add	r24, r24
 26e:	28 2f       	mov	r18, r24
 270:	22 0f       	add	r18, r18
 272:	22 0f       	add	r18, r18
 274:	82 0f       	add	r24, r18
 276:	98 1b       	sub	r25, r24
 278:	90 93 8b 00 	sts	0x008B, r25
	}
 27c:	4b cf       	rjmp	.-362    	; 0x114 <main+0xb6>
	
	while(1)
	{
		
		if (!(PIND & 1<<7) && flag1 == 0) {
			light++;
 27e:	0f 5f       	subi	r16, 0xFF	; 255
			flag1 = 1;
 280:	70 92 87 00 	sts	0x0087, r7
 284:	4e cf       	rjmp	.-356    	; 0x122 <main+0xc4>
		}
		if (light > 2) light = 0;


		if (!(PIND & 1<<6) && flag2 == 0) {
			mode++;
 286:	1f 5f       	subi	r17, 0xFF	; 255
			flag2 = 1;
 288:	70 92 86 00 	sts	0x0086, r7
 28c:	54 cf       	rjmp	.-344    	; 0x136 <main+0xd8>

0000028e <__vector_9>:
		r3 = q%100*0.1;
		r4 = q%10;
		r5 = v%10;
	}
}
ISR (TIMER0_OVF_vect) {
 28e:	1f 92       	push	r1
 290:	0f 92       	push	r0
 292:	0f b6       	in	r0, 0x3f	; 63
 294:	0f 92       	push	r0
 296:	11 24       	eor	r1, r1
 298:	2f 93       	push	r18
 29a:	8f 93       	push	r24
 29c:	9f 93       	push	r25
 29e:	ef 93       	push	r30
 2a0:	ff 93       	push	r31
	SPDR = mass45 [r5] | dp5<<0;
 2a2:	e0 91 8b 00 	lds	r30, 0x008B
 2a6:	90 91 60 00 	lds	r25, 0x0060
 2aa:	f0 e0       	ldi	r31, 0x00	; 0
 2ac:	eb 59       	subi	r30, 0x9B	; 155
 2ae:	ff 4f       	sbci	r31, 0xFF	; 255
 2b0:	80 81       	ld	r24, Z
 2b2:	89 2b       	or	r24, r25
 2b4:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF)));
 2b6:	77 9b       	sbis	0x0e, 7	; 14
 2b8:	fe cf       	rjmp	.-4      	; 0x2b6 <__vector_9+0x28>
	SPDR = mass45 [r4] | dp4<<0;
 2ba:	e0 91 8c 00 	lds	r30, 0x008C
 2be:	90 91 61 00 	lds	r25, 0x0061
 2c2:	f0 e0       	ldi	r31, 0x00	; 0
 2c4:	eb 59       	subi	r30, 0x9B	; 155
 2c6:	ff 4f       	sbci	r31, 0xFF	; 255
 2c8:	80 81       	ld	r24, Z
 2ca:	89 2b       	or	r24, r25
 2cc:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF)));
 2ce:	77 9b       	sbis	0x0e, 7	; 14
 2d0:	fe cf       	rjmp	.-4      	; 0x2ce <__vector_9+0x40>
	SPDR = mass3 [r3]  | dp3<<7;
 2d2:	e0 91 8d 00 	lds	r30, 0x008D
 2d6:	80 91 62 00 	lds	r24, 0x0062
 2da:	20 e8       	ldi	r18, 0x80	; 128
 2dc:	82 9f       	mul	r24, r18
 2de:	c0 01       	movw	r24, r0
 2e0:	11 24       	eor	r1, r1
 2e2:	f0 e0       	ldi	r31, 0x00	; 0
 2e4:	e1 59       	subi	r30, 0x91	; 145
 2e6:	ff 4f       	sbci	r31, 0xFF	; 255
 2e8:	90 81       	ld	r25, Z
 2ea:	89 2b       	or	r24, r25
 2ec:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF)));
 2ee:	77 9b       	sbis	0x0e, 7	; 14
 2f0:	fe cf       	rjmp	.-4      	; 0x2ee <__vector_9+0x60>
	SPDR = mass12 [r2] | dp2<<4;
 2f2:	e0 91 8e 00 	lds	r30, 0x008E
 2f6:	80 91 63 00 	lds	r24, 0x0063
 2fa:	20 e1       	ldi	r18, 0x10	; 16
 2fc:	82 9f       	mul	r24, r18
 2fe:	c0 01       	movw	r24, r0
 300:	11 24       	eor	r1, r1
 302:	f0 e0       	ldi	r31, 0x00	; 0
 304:	e7 58       	subi	r30, 0x87	; 135
 306:	ff 4f       	sbci	r31, 0xFF	; 255
 308:	90 81       	ld	r25, Z
 30a:	89 2b       	or	r24, r25
 30c:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF)));
 30e:	77 9b       	sbis	0x0e, 7	; 14
 310:	fe cf       	rjmp	.-4      	; 0x30e <__vector_9+0x80>
	SPDR = mass12 [r1] | dp1<<4;
 312:	e0 91 8f 00 	lds	r30, 0x008F
 316:	80 91 64 00 	lds	r24, 0x0064
 31a:	20 e1       	ldi	r18, 0x10	; 16
 31c:	82 9f       	mul	r24, r18
 31e:	c0 01       	movw	r24, r0
 320:	11 24       	eor	r1, r1
 322:	f0 e0       	ldi	r31, 0x00	; 0
 324:	e7 58       	subi	r30, 0x87	; 135
 326:	ff 4f       	sbci	r31, 0xFF	; 255
 328:	90 81       	ld	r25, Z
 32a:	89 2b       	or	r24, r25
 32c:	8f b9       	out	0x0f, r24	; 15
	while(!(SPSR & (1<<SPIF)));
 32e:	77 9b       	sbis	0x0e, 7	; 14
 330:	fe cf       	rjmp	.-4      	; 0x32e <__vector_9+0xa0>
	
	PORTB |= (1<<2); //enter
 332:	c2 9a       	sbi	0x18, 2	; 24
	PORTB &= ~(1<<2); //enter
 334:	c2 98       	cbi	0x18, 2	; 24

	TCNT0 = 0;
 336:	12 be       	out	0x32, r1	; 50
	if (PIND & 1<<6) flag2 = 0;
 338:	86 99       	sbic	0x10, 6	; 16
 33a:	10 92 86 00 	sts	0x0086, r1
	if (PIND & 1<<7) flag1 = 0;
 33e:	87 99       	sbic	0x10, 7	; 16
 340:	10 92 87 00 	sts	0x0087, r1

}
 344:	ff 91       	pop	r31
 346:	ef 91       	pop	r30
 348:	9f 91       	pop	r25
 34a:	8f 91       	pop	r24
 34c:	2f 91       	pop	r18
 34e:	0f 90       	pop	r0
 350:	0f be       	out	0x3f, r0	; 63
 352:	0f 90       	pop	r0
 354:	1f 90       	pop	r1
 356:	18 95       	reti

00000358 <__vector_1>:

ISR (INT0_vect) {
 358:	1f 92       	push	r1
 35a:	0f 92       	push	r0
 35c:	0f b6       	in	r0, 0x3f	; 63
 35e:	0f 92       	push	r0
 360:	11 24       	eor	r1, r1
 362:	5f 93       	push	r21
 364:	6f 93       	push	r22
 366:	7f 93       	push	r23
 368:	8f 93       	push	r24
 36a:	9f 93       	push	r25
 36c:	af 93       	push	r26
 36e:	bf 93       	push	r27
	v = 1400/TCNT2;//3.6*0.254*3.14/n/0.000512/t получаем скорость в км/час
 370:	64 b5       	in	r22, 0x24	; 36
 372:	70 e0       	ldi	r23, 0x00	; 0
 374:	88 e7       	ldi	r24, 0x78	; 120
 376:	95 e0       	ldi	r25, 0x05	; 5
 378:	89 d1       	rcall	.+786    	; 0x68c <__divmodhi4>
 37a:	60 93 92 00 	sts	0x0092, r22
	TCNT2 = 0;
 37e:	14 bc       	out	0x24, r1	; 36
	hz++;
 380:	80 91 88 00 	lds	r24, 0x0088
 384:	90 91 89 00 	lds	r25, 0x0089
 388:	01 96       	adiw	r24, 0x01	; 1
 38a:	90 93 89 00 	sts	0x0089, r25
 38e:	80 93 88 00 	sts	0x0088, r24
}
 392:	bf 91       	pop	r27
 394:	af 91       	pop	r26
 396:	9f 91       	pop	r25
 398:	8f 91       	pop	r24
 39a:	7f 91       	pop	r23
 39c:	6f 91       	pop	r22
 39e:	5f 91       	pop	r21
 3a0:	0f 90       	pop	r0
 3a2:	0f be       	out	0x3f, r0	; 63
 3a4:	0f 90       	pop	r0
 3a6:	1f 90       	pop	r1
 3a8:	18 95       	reti

000003aa <__vector_14>:
ISR (ADC_vect) {
 3aa:	1f 92       	push	r1
 3ac:	0f 92       	push	r0
 3ae:	0f b6       	in	r0, 0x3f	; 63
 3b0:	0f 92       	push	r0
 3b2:	11 24       	eor	r1, r1
 3b4:	2f 93       	push	r18
 3b6:	3f 93       	push	r19
 3b8:	4f 93       	push	r20
 3ba:	5f 93       	push	r21
 3bc:	6f 93       	push	r22
 3be:	7f 93       	push	r23
 3c0:	8f 93       	push	r24
 3c2:	9f 93       	push	r25
 3c4:	af 93       	push	r26
 3c6:	bf 93       	push	r27
 3c8:	ef 93       	push	r30
 3ca:	ff 93       	push	r31
	switch (ADMUX) {
 3cc:	87 b1       	in	r24, 0x07	; 7
 3ce:	80 34       	cpi	r24, 0x40	; 64
 3d0:	19 f0       	breq	.+6      	; 0x3d8 <__vector_14+0x2e>
 3d2:	82 34       	cpi	r24, 0x42	; 66
 3d4:	c1 f0       	breq	.+48     	; 0x406 <__vector_14+0x5c>
 3d6:	26 c0       	rjmp	.+76     	; 0x424 <__vector_14+0x7a>
		case 0b01000000: voltage = ADC*0.49*k; ADMUX = 0b01000010; break;
 3d8:	64 b1       	in	r22, 0x04	; 4
 3da:	75 b1       	in	r23, 0x05	; 5
 3dc:	80 e0       	ldi	r24, 0x00	; 0
 3de:	90 e0       	ldi	r25, 0x00	; 0
 3e0:	64 d0       	rcall	.+200    	; 0x4aa <__floatunsisf>
 3e2:	28 e4       	ldi	r18, 0x48	; 72
 3e4:	31 ee       	ldi	r19, 0xE1	; 225
 3e6:	4a ef       	ldi	r20, 0xFA	; 250
 3e8:	5e e3       	ldi	r21, 0x3E	; 62
 3ea:	c5 d0       	rcall	.+394    	; 0x576 <__mulsf3>
 3ec:	20 e0       	ldi	r18, 0x00	; 0
 3ee:	30 e0       	ldi	r19, 0x00	; 0
 3f0:	40 ea       	ldi	r20, 0xA0	; 160
 3f2:	50 e4       	ldi	r21, 0x40	; 64
 3f4:	c0 d0       	rcall	.+384    	; 0x576 <__mulsf3>
 3f6:	28 d0       	rcall	.+80     	; 0x448 <__fixsfsi>
 3f8:	70 93 85 00 	sts	0x0085, r23
 3fc:	60 93 84 00 	sts	0x0084, r22
 400:	82 e4       	ldi	r24, 0x42	; 66
 402:	87 b9       	out	0x07, r24	; 7
 404:	0f c0       	rjmp	.+30     	; 0x424 <__vector_14+0x7a>
	    case 0b01000010: OCR1A = 5*(ADC - 372) + 1560; ADMUX = 0b01000000; break;
 406:	84 b1       	in	r24, 0x04	; 4
 408:	95 b1       	in	r25, 0x05	; 5
 40a:	9c 01       	movw	r18, r24
 40c:	22 0f       	add	r18, r18
 40e:	33 1f       	adc	r19, r19
 410:	22 0f       	add	r18, r18
 412:	33 1f       	adc	r19, r19
 414:	82 0f       	add	r24, r18
 416:	93 1f       	adc	r25, r19
 418:	8c 52       	subi	r24, 0x2C	; 44
 41a:	91 40       	sbci	r25, 0x01	; 1
 41c:	9b bd       	out	0x2b, r25	; 43
 41e:	8a bd       	out	0x2a, r24	; 42
 420:	80 e4       	ldi	r24, 0x40	; 64
 422:	87 b9       	out	0x07, r24	; 7
	}
	ADCSRA |= 1<<ADSC;
 424:	36 9a       	sbi	0x06, 6	; 6
 426:	ff 91       	pop	r31
 428:	ef 91       	pop	r30
 42a:	bf 91       	pop	r27
 42c:	af 91       	pop	r26
 42e:	9f 91       	pop	r25
 430:	8f 91       	pop	r24
 432:	7f 91       	pop	r23
 434:	6f 91       	pop	r22
 436:	5f 91       	pop	r21
 438:	4f 91       	pop	r20
 43a:	3f 91       	pop	r19
 43c:	2f 91       	pop	r18
 43e:	0f 90       	pop	r0
 440:	0f be       	out	0x3f, r0	; 63
 442:	0f 90       	pop	r0
 444:	1f 90       	pop	r1
 446:	18 95       	reti

00000448 <__fixsfsi>:
 448:	04 d0       	rcall	.+8      	; 0x452 <__fixunssfsi>
 44a:	68 94       	set
 44c:	b1 11       	cpse	r27, r1
 44e:	8d c0       	rjmp	.+282    	; 0x56a <__fp_szero>
 450:	08 95       	ret

00000452 <__fixunssfsi>:
 452:	70 d0       	rcall	.+224    	; 0x534 <__fp_splitA>
 454:	88 f0       	brcs	.+34     	; 0x478 <__stack+0x19>
 456:	9f 57       	subi	r25, 0x7F	; 127
 458:	90 f0       	brcs	.+36     	; 0x47e <__stack+0x1f>
 45a:	b9 2f       	mov	r27, r25
 45c:	99 27       	eor	r25, r25
 45e:	b7 51       	subi	r27, 0x17	; 23
 460:	a0 f0       	brcs	.+40     	; 0x48a <__stack+0x2b>
 462:	d1 f0       	breq	.+52     	; 0x498 <__stack+0x39>
 464:	66 0f       	add	r22, r22
 466:	77 1f       	adc	r23, r23
 468:	88 1f       	adc	r24, r24
 46a:	99 1f       	adc	r25, r25
 46c:	1a f0       	brmi	.+6      	; 0x474 <__stack+0x15>
 46e:	ba 95       	dec	r27
 470:	c9 f7       	brne	.-14     	; 0x464 <__stack+0x5>
 472:	12 c0       	rjmp	.+36     	; 0x498 <__stack+0x39>
 474:	b1 30       	cpi	r27, 0x01	; 1
 476:	81 f0       	breq	.+32     	; 0x498 <__stack+0x39>
 478:	77 d0       	rcall	.+238    	; 0x568 <__fp_zero>
 47a:	b1 e0       	ldi	r27, 0x01	; 1
 47c:	08 95       	ret
 47e:	74 c0       	rjmp	.+232    	; 0x568 <__fp_zero>
 480:	67 2f       	mov	r22, r23
 482:	78 2f       	mov	r23, r24
 484:	88 27       	eor	r24, r24
 486:	b8 5f       	subi	r27, 0xF8	; 248
 488:	39 f0       	breq	.+14     	; 0x498 <__stack+0x39>
 48a:	b9 3f       	cpi	r27, 0xF9	; 249
 48c:	cc f3       	brlt	.-14     	; 0x480 <__stack+0x21>
 48e:	86 95       	lsr	r24
 490:	77 95       	ror	r23
 492:	67 95       	ror	r22
 494:	b3 95       	inc	r27
 496:	d9 f7       	brne	.-10     	; 0x48e <__stack+0x2f>
 498:	3e f4       	brtc	.+14     	; 0x4a8 <__stack+0x49>
 49a:	90 95       	com	r25
 49c:	80 95       	com	r24
 49e:	70 95       	com	r23
 4a0:	61 95       	neg	r22
 4a2:	7f 4f       	sbci	r23, 0xFF	; 255
 4a4:	8f 4f       	sbci	r24, 0xFF	; 255
 4a6:	9f 4f       	sbci	r25, 0xFF	; 255
 4a8:	08 95       	ret

000004aa <__floatunsisf>:
 4aa:	e8 94       	clt
 4ac:	09 c0       	rjmp	.+18     	; 0x4c0 <__floatsisf+0x12>

000004ae <__floatsisf>:
 4ae:	97 fb       	bst	r25, 7
 4b0:	3e f4       	brtc	.+14     	; 0x4c0 <__floatsisf+0x12>
 4b2:	90 95       	com	r25
 4b4:	80 95       	com	r24
 4b6:	70 95       	com	r23
 4b8:	61 95       	neg	r22
 4ba:	7f 4f       	sbci	r23, 0xFF	; 255
 4bc:	8f 4f       	sbci	r24, 0xFF	; 255
 4be:	9f 4f       	sbci	r25, 0xFF	; 255
 4c0:	99 23       	and	r25, r25
 4c2:	a9 f0       	breq	.+42     	; 0x4ee <__floatsisf+0x40>
 4c4:	f9 2f       	mov	r31, r25
 4c6:	96 e9       	ldi	r25, 0x96	; 150
 4c8:	bb 27       	eor	r27, r27
 4ca:	93 95       	inc	r25
 4cc:	f6 95       	lsr	r31
 4ce:	87 95       	ror	r24
 4d0:	77 95       	ror	r23
 4d2:	67 95       	ror	r22
 4d4:	b7 95       	ror	r27
 4d6:	f1 11       	cpse	r31, r1
 4d8:	f8 cf       	rjmp	.-16     	; 0x4ca <__floatsisf+0x1c>
 4da:	fa f4       	brpl	.+62     	; 0x51a <__floatsisf+0x6c>
 4dc:	bb 0f       	add	r27, r27
 4de:	11 f4       	brne	.+4      	; 0x4e4 <__floatsisf+0x36>
 4e0:	60 ff       	sbrs	r22, 0
 4e2:	1b c0       	rjmp	.+54     	; 0x51a <__floatsisf+0x6c>
 4e4:	6f 5f       	subi	r22, 0xFF	; 255
 4e6:	7f 4f       	sbci	r23, 0xFF	; 255
 4e8:	8f 4f       	sbci	r24, 0xFF	; 255
 4ea:	9f 4f       	sbci	r25, 0xFF	; 255
 4ec:	16 c0       	rjmp	.+44     	; 0x51a <__floatsisf+0x6c>
 4ee:	88 23       	and	r24, r24
 4f0:	11 f0       	breq	.+4      	; 0x4f6 <__floatsisf+0x48>
 4f2:	96 e9       	ldi	r25, 0x96	; 150
 4f4:	11 c0       	rjmp	.+34     	; 0x518 <__floatsisf+0x6a>
 4f6:	77 23       	and	r23, r23
 4f8:	21 f0       	breq	.+8      	; 0x502 <__floatsisf+0x54>
 4fa:	9e e8       	ldi	r25, 0x8E	; 142
 4fc:	87 2f       	mov	r24, r23
 4fe:	76 2f       	mov	r23, r22
 500:	05 c0       	rjmp	.+10     	; 0x50c <__floatsisf+0x5e>
 502:	66 23       	and	r22, r22
 504:	71 f0       	breq	.+28     	; 0x522 <__floatsisf+0x74>
 506:	96 e8       	ldi	r25, 0x86	; 134
 508:	86 2f       	mov	r24, r22
 50a:	70 e0       	ldi	r23, 0x00	; 0
 50c:	60 e0       	ldi	r22, 0x00	; 0
 50e:	2a f0       	brmi	.+10     	; 0x51a <__floatsisf+0x6c>
 510:	9a 95       	dec	r25
 512:	66 0f       	add	r22, r22
 514:	77 1f       	adc	r23, r23
 516:	88 1f       	adc	r24, r24
 518:	da f7       	brpl	.-10     	; 0x510 <__floatsisf+0x62>
 51a:	88 0f       	add	r24, r24
 51c:	96 95       	lsr	r25
 51e:	87 95       	ror	r24
 520:	97 f9       	bld	r25, 7
 522:	08 95       	ret

00000524 <__fp_split3>:
 524:	57 fd       	sbrc	r21, 7
 526:	90 58       	subi	r25, 0x80	; 128
 528:	44 0f       	add	r20, r20
 52a:	55 1f       	adc	r21, r21
 52c:	59 f0       	breq	.+22     	; 0x544 <__fp_splitA+0x10>
 52e:	5f 3f       	cpi	r21, 0xFF	; 255
 530:	71 f0       	breq	.+28     	; 0x54e <__fp_splitA+0x1a>
 532:	47 95       	ror	r20

00000534 <__fp_splitA>:
 534:	88 0f       	add	r24, r24
 536:	97 fb       	bst	r25, 7
 538:	99 1f       	adc	r25, r25
 53a:	61 f0       	breq	.+24     	; 0x554 <__fp_splitA+0x20>
 53c:	9f 3f       	cpi	r25, 0xFF	; 255
 53e:	79 f0       	breq	.+30     	; 0x55e <__fp_splitA+0x2a>
 540:	87 95       	ror	r24
 542:	08 95       	ret
 544:	12 16       	cp	r1, r18
 546:	13 06       	cpc	r1, r19
 548:	14 06       	cpc	r1, r20
 54a:	55 1f       	adc	r21, r21
 54c:	f2 cf       	rjmp	.-28     	; 0x532 <__fp_split3+0xe>
 54e:	46 95       	lsr	r20
 550:	f1 df       	rcall	.-30     	; 0x534 <__fp_splitA>
 552:	08 c0       	rjmp	.+16     	; 0x564 <__fp_splitA+0x30>
 554:	16 16       	cp	r1, r22
 556:	17 06       	cpc	r1, r23
 558:	18 06       	cpc	r1, r24
 55a:	99 1f       	adc	r25, r25
 55c:	f1 cf       	rjmp	.-30     	; 0x540 <__fp_splitA+0xc>
 55e:	86 95       	lsr	r24
 560:	71 05       	cpc	r23, r1
 562:	61 05       	cpc	r22, r1
 564:	08 94       	sec
 566:	08 95       	ret

00000568 <__fp_zero>:
 568:	e8 94       	clt

0000056a <__fp_szero>:
 56a:	bb 27       	eor	r27, r27
 56c:	66 27       	eor	r22, r22
 56e:	77 27       	eor	r23, r23
 570:	cb 01       	movw	r24, r22
 572:	97 f9       	bld	r25, 7
 574:	08 95       	ret

00000576 <__mulsf3>:
 576:	0b d0       	rcall	.+22     	; 0x58e <__mulsf3x>
 578:	78 c0       	rjmp	.+240    	; 0x66a <__fp_round>
 57a:	69 d0       	rcall	.+210    	; 0x64e <__fp_pscA>
 57c:	28 f0       	brcs	.+10     	; 0x588 <__mulsf3+0x12>
 57e:	6e d0       	rcall	.+220    	; 0x65c <__fp_pscB>
 580:	18 f0       	brcs	.+6      	; 0x588 <__mulsf3+0x12>
 582:	95 23       	and	r25, r21
 584:	09 f0       	breq	.+2      	; 0x588 <__mulsf3+0x12>
 586:	5a c0       	rjmp	.+180    	; 0x63c <__fp_inf>
 588:	5f c0       	rjmp	.+190    	; 0x648 <__fp_nan>
 58a:	11 24       	eor	r1, r1
 58c:	ee cf       	rjmp	.-36     	; 0x56a <__fp_szero>

0000058e <__mulsf3x>:
 58e:	ca df       	rcall	.-108    	; 0x524 <__fp_split3>
 590:	a0 f3       	brcs	.-24     	; 0x57a <__mulsf3+0x4>

00000592 <__mulsf3_pse>:
 592:	95 9f       	mul	r25, r21
 594:	d1 f3       	breq	.-12     	; 0x58a <__mulsf3+0x14>
 596:	95 0f       	add	r25, r21
 598:	50 e0       	ldi	r21, 0x00	; 0
 59a:	55 1f       	adc	r21, r21
 59c:	62 9f       	mul	r22, r18
 59e:	f0 01       	movw	r30, r0
 5a0:	72 9f       	mul	r23, r18
 5a2:	bb 27       	eor	r27, r27
 5a4:	f0 0d       	add	r31, r0
 5a6:	b1 1d       	adc	r27, r1
 5a8:	63 9f       	mul	r22, r19
 5aa:	aa 27       	eor	r26, r26
 5ac:	f0 0d       	add	r31, r0
 5ae:	b1 1d       	adc	r27, r1
 5b0:	aa 1f       	adc	r26, r26
 5b2:	64 9f       	mul	r22, r20
 5b4:	66 27       	eor	r22, r22
 5b6:	b0 0d       	add	r27, r0
 5b8:	a1 1d       	adc	r26, r1
 5ba:	66 1f       	adc	r22, r22
 5bc:	82 9f       	mul	r24, r18
 5be:	22 27       	eor	r18, r18
 5c0:	b0 0d       	add	r27, r0
 5c2:	a1 1d       	adc	r26, r1
 5c4:	62 1f       	adc	r22, r18
 5c6:	73 9f       	mul	r23, r19
 5c8:	b0 0d       	add	r27, r0
 5ca:	a1 1d       	adc	r26, r1
 5cc:	62 1f       	adc	r22, r18
 5ce:	83 9f       	mul	r24, r19
 5d0:	a0 0d       	add	r26, r0
 5d2:	61 1d       	adc	r22, r1
 5d4:	22 1f       	adc	r18, r18
 5d6:	74 9f       	mul	r23, r20
 5d8:	33 27       	eor	r19, r19
 5da:	a0 0d       	add	r26, r0
 5dc:	61 1d       	adc	r22, r1
 5de:	23 1f       	adc	r18, r19
 5e0:	84 9f       	mul	r24, r20
 5e2:	60 0d       	add	r22, r0
 5e4:	21 1d       	adc	r18, r1
 5e6:	82 2f       	mov	r24, r18
 5e8:	76 2f       	mov	r23, r22
 5ea:	6a 2f       	mov	r22, r26
 5ec:	11 24       	eor	r1, r1
 5ee:	9f 57       	subi	r25, 0x7F	; 127
 5f0:	50 40       	sbci	r21, 0x00	; 0
 5f2:	8a f0       	brmi	.+34     	; 0x616 <__mulsf3_pse+0x84>
 5f4:	e1 f0       	breq	.+56     	; 0x62e <__mulsf3_pse+0x9c>
 5f6:	88 23       	and	r24, r24
 5f8:	4a f0       	brmi	.+18     	; 0x60c <__mulsf3_pse+0x7a>
 5fa:	ee 0f       	add	r30, r30
 5fc:	ff 1f       	adc	r31, r31
 5fe:	bb 1f       	adc	r27, r27
 600:	66 1f       	adc	r22, r22
 602:	77 1f       	adc	r23, r23
 604:	88 1f       	adc	r24, r24
 606:	91 50       	subi	r25, 0x01	; 1
 608:	50 40       	sbci	r21, 0x00	; 0
 60a:	a9 f7       	brne	.-22     	; 0x5f6 <__mulsf3_pse+0x64>
 60c:	9e 3f       	cpi	r25, 0xFE	; 254
 60e:	51 05       	cpc	r21, r1
 610:	70 f0       	brcs	.+28     	; 0x62e <__mulsf3_pse+0x9c>
 612:	14 c0       	rjmp	.+40     	; 0x63c <__fp_inf>
 614:	aa cf       	rjmp	.-172    	; 0x56a <__fp_szero>
 616:	5f 3f       	cpi	r21, 0xFF	; 255
 618:	ec f3       	brlt	.-6      	; 0x614 <__mulsf3_pse+0x82>
 61a:	98 3e       	cpi	r25, 0xE8	; 232
 61c:	dc f3       	brlt	.-10     	; 0x614 <__mulsf3_pse+0x82>
 61e:	86 95       	lsr	r24
 620:	77 95       	ror	r23
 622:	67 95       	ror	r22
 624:	b7 95       	ror	r27
 626:	f7 95       	ror	r31
 628:	e7 95       	ror	r30
 62a:	9f 5f       	subi	r25, 0xFF	; 255
 62c:	c1 f7       	brne	.-16     	; 0x61e <__mulsf3_pse+0x8c>
 62e:	fe 2b       	or	r31, r30
 630:	88 0f       	add	r24, r24
 632:	91 1d       	adc	r25, r1
 634:	96 95       	lsr	r25
 636:	87 95       	ror	r24
 638:	97 f9       	bld	r25, 7
 63a:	08 95       	ret

0000063c <__fp_inf>:
 63c:	97 f9       	bld	r25, 7
 63e:	9f 67       	ori	r25, 0x7F	; 127
 640:	80 e8       	ldi	r24, 0x80	; 128
 642:	70 e0       	ldi	r23, 0x00	; 0
 644:	60 e0       	ldi	r22, 0x00	; 0
 646:	08 95       	ret

00000648 <__fp_nan>:
 648:	9f ef       	ldi	r25, 0xFF	; 255
 64a:	80 ec       	ldi	r24, 0xC0	; 192
 64c:	08 95       	ret

0000064e <__fp_pscA>:
 64e:	00 24       	eor	r0, r0
 650:	0a 94       	dec	r0
 652:	16 16       	cp	r1, r22
 654:	17 06       	cpc	r1, r23
 656:	18 06       	cpc	r1, r24
 658:	09 06       	cpc	r0, r25
 65a:	08 95       	ret

0000065c <__fp_pscB>:
 65c:	00 24       	eor	r0, r0
 65e:	0a 94       	dec	r0
 660:	12 16       	cp	r1, r18
 662:	13 06       	cpc	r1, r19
 664:	14 06       	cpc	r1, r20
 666:	05 06       	cpc	r0, r21
 668:	08 95       	ret

0000066a <__fp_round>:
 66a:	09 2e       	mov	r0, r25
 66c:	03 94       	inc	r0
 66e:	00 0c       	add	r0, r0
 670:	11 f4       	brne	.+4      	; 0x676 <__fp_round+0xc>
 672:	88 23       	and	r24, r24
 674:	52 f0       	brmi	.+20     	; 0x68a <__fp_round+0x20>
 676:	bb 0f       	add	r27, r27
 678:	40 f4       	brcc	.+16     	; 0x68a <__fp_round+0x20>
 67a:	bf 2b       	or	r27, r31
 67c:	11 f4       	brne	.+4      	; 0x682 <__fp_round+0x18>
 67e:	60 ff       	sbrs	r22, 0
 680:	04 c0       	rjmp	.+8      	; 0x68a <__fp_round+0x20>
 682:	6f 5f       	subi	r22, 0xFF	; 255
 684:	7f 4f       	sbci	r23, 0xFF	; 255
 686:	8f 4f       	sbci	r24, 0xFF	; 255
 688:	9f 4f       	sbci	r25, 0xFF	; 255
 68a:	08 95       	ret

0000068c <__divmodhi4>:
 68c:	97 fb       	bst	r25, 7
 68e:	07 2e       	mov	r0, r23
 690:	16 f4       	brtc	.+4      	; 0x696 <__divmodhi4+0xa>
 692:	00 94       	com	r0
 694:	06 d0       	rcall	.+12     	; 0x6a2 <__divmodhi4_neg1>
 696:	77 fd       	sbrc	r23, 7
 698:	08 d0       	rcall	.+16     	; 0x6aa <__divmodhi4_neg2>
 69a:	0b d0       	rcall	.+22     	; 0x6b2 <__udivmodhi4>
 69c:	07 fc       	sbrc	r0, 7
 69e:	05 d0       	rcall	.+10     	; 0x6aa <__divmodhi4_neg2>
 6a0:	3e f4       	brtc	.+14     	; 0x6b0 <__divmodhi4_exit>

000006a2 <__divmodhi4_neg1>:
 6a2:	90 95       	com	r25
 6a4:	81 95       	neg	r24
 6a6:	9f 4f       	sbci	r25, 0xFF	; 255
 6a8:	08 95       	ret

000006aa <__divmodhi4_neg2>:
 6aa:	70 95       	com	r23
 6ac:	61 95       	neg	r22
 6ae:	7f 4f       	sbci	r23, 0xFF	; 255

000006b0 <__divmodhi4_exit>:
 6b0:	08 95       	ret

000006b2 <__udivmodhi4>:
 6b2:	aa 1b       	sub	r26, r26
 6b4:	bb 1b       	sub	r27, r27
 6b6:	51 e1       	ldi	r21, 0x11	; 17
 6b8:	07 c0       	rjmp	.+14     	; 0x6c8 <__udivmodhi4_ep>

000006ba <__udivmodhi4_loop>:
 6ba:	aa 1f       	adc	r26, r26
 6bc:	bb 1f       	adc	r27, r27
 6be:	a6 17       	cp	r26, r22
 6c0:	b7 07       	cpc	r27, r23
 6c2:	10 f0       	brcs	.+4      	; 0x6c8 <__udivmodhi4_ep>
 6c4:	a6 1b       	sub	r26, r22
 6c6:	b7 0b       	sbc	r27, r23

000006c8 <__udivmodhi4_ep>:
 6c8:	88 1f       	adc	r24, r24
 6ca:	99 1f       	adc	r25, r25
 6cc:	5a 95       	dec	r21
 6ce:	a9 f7       	brne	.-22     	; 0x6ba <__udivmodhi4_loop>
 6d0:	80 95       	com	r24
 6d2:	90 95       	com	r25
 6d4:	bc 01       	movw	r22, r24
 6d6:	cd 01       	movw	r24, r26
 6d8:	08 95       	ret

000006da <_exit>:
 6da:	f8 94       	cli

000006dc <__stop_program>:
 6dc:	ff cf       	rjmp	.-2      	; 0x6dc <__stop_program>
