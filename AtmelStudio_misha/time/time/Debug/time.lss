
time.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000154  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  000001a8  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000020  00000000  00000000  000001d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   0000018a  00000000  00000000  000001f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 000000e4  00000000  00000000  00000382  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000123  00000000  00000000  00000466  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000024  00000000  00000000  0000058c  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000172  00000000  00000000  000005b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_ranges 00000010  00000000  00000000  00000722  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 56 00 	jmp	0xac	; 0xac <__ctors_end>
   4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
   8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
   c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  10:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  14:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  18:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  1c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  20:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  24:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  28:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  2c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  30:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  34:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  38:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  3c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  40:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  44:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  48:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  4c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  50:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  54:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  58:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  5c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  60:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  64:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  68:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  6c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  70:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  74:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  78:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  7c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  80:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  84:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  88:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  8c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  90:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  94:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  98:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  9c:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a0:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a4:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>
  a8:	0c 94 60 00 	jmp	0xc0	; 0xc0 <__bad_interrupt>

000000ac <__ctors_end>:
  ac:	11 24       	eor	r1, r1
  ae:	1f be       	out	0x3f, r1	; 63
  b0:	cf ef       	ldi	r28, 0xFF	; 255
  b2:	da e0       	ldi	r29, 0x0A	; 10
  b4:	de bf       	out	0x3e, r29	; 62
  b6:	cd bf       	out	0x3d, r28	; 61
  b8:	0e 94 62 00 	call	0xc4	; 0xc4 <main>
  bc:	0c 94 a8 00 	jmp	0x150	; 0x150 <_exit>

000000c0 <__bad_interrupt>:
  c0:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000c4 <main>:



int main(void)
{
	DDRB |= 1<<3;  //часы
  c4:	23 9a       	sbi	0x04, 3	; 4
	DDRB &= ~1<<1; //кнопка
  c6:	84 b1       	in	r24, 0x04	; 4
  c8:	8c 7f       	andi	r24, 0xFC	; 252
  ca:	84 b9       	out	0x04, r24	; 4
	DDRD |= 1<<0 | 1<<1 | 1<<4 | 1<<7; //фонари
  cc:	8a b1       	in	r24, 0x0a	; 10
  ce:	83 69       	ori	r24, 0x93	; 147
  d0:	8a b9       	out	0x0a, r24	; 10
	DDRC |= 1<<6; //фонари
  d2:	3e 9a       	sbi	0x07, 6	; 7
	DDRE |= 1<<6; //фонари
  d4:	6e 9a       	sbi	0x0d, 6	; 13
	

	
    while(1)
    {
		PORTC &= ~1<<6;
  d6:	88 b1       	in	r24, 0x08	; 8
  d8:	80 78       	andi	r24, 0x80	; 128
  da:	88 b9       	out	0x08, r24	; 8
		PORTD &= ~1<<7;
  dc:	8b b1       	in	r24, 0x0b	; 11
  de:	1b b8       	out	0x0b, r1	; 11
		PORTD &= ~1<<1;
  e0:	8b b1       	in	r24, 0x0b	; 11
  e2:	8c 7f       	andi	r24, 0xFC	; 252
  e4:	8b b9       	out	0x0b, r24	; 11
		PORTE &= ~1<<6;
  e6:	8e b1       	in	r24, 0x0e	; 14
  e8:	80 78       	andi	r24, 0x80	; 128
  ea:	8e b9       	out	0x0e, r24	; 14
		PORTD &= ~1<<0;
  ec:	58 98       	cbi	0x0b, 0	; 11
		PORTB &= ~1<<3;
  ee:	85 b1       	in	r24, 0x05	; 5
  f0:	80 7f       	andi	r24, 0xF0	; 240
  f2:	85 b9       	out	0x05, r24	; 5
		
		
		if (PINB & 1<<1) {
  f4:	19 9b       	sbis	0x03, 1	; 3
  f6:	ef cf       	rjmp	.-34     	; 0xd6 <main+0x12>
			PORTB |= 1<<3;
  f8:	2b 9a       	sbi	0x05, 3	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  fa:	2f ef       	ldi	r18, 0xFF	; 255
  fc:	83 e2       	ldi	r24, 0x23	; 35
  fe:	94 ef       	ldi	r25, 0xF4	; 244
 100:	21 50       	subi	r18, 0x01	; 1
 102:	80 40       	sbci	r24, 0x00	; 0
 104:	90 40       	sbci	r25, 0x00	; 0
 106:	e1 f7       	brne	.-8      	; 0x100 <main+0x3c>
 108:	00 c0       	rjmp	.+0      	; 0x10a <main+0x46>
 10a:	00 00       	nop
			_delay_ms(5000);
			
			PORTD |= 1<<0;
 10c:	58 9a       	sbi	0x0b, 0	; 11
			PORTD |= 1<<1;
 10e:	59 9a       	sbi	0x0b, 1	; 11
			PORTD |= 1<<7;
 110:	5f 9a       	sbi	0x0b, 7	; 11
			PORTC |= 1<<6;
 112:	46 9a       	sbi	0x08, 6	; 8
			PORTE |= 1<<6;
 114:	76 9a       	sbi	0x0e, 6	; 14
 116:	2f ef       	ldi	r18, 0xFF	; 255
 118:	83 ed       	ldi	r24, 0xD3	; 211
 11a:	90 e3       	ldi	r25, 0x30	; 48
 11c:	21 50       	subi	r18, 0x01	; 1
 11e:	80 40       	sbci	r24, 0x00	; 0
 120:	90 40       	sbci	r25, 0x00	; 0
 122:	e1 f7       	brne	.-8      	; 0x11c <main+0x58>
 124:	00 c0       	rjmp	.+0      	; 0x126 <main+0x62>
 126:	00 00       	nop
// // 			//
//  			_delay_ms(1000);
//  			PORTD &= ~1<<1;
//  			//
//  			_delay_ms(1000);
  			PORTE &= ~1<<6;
 128:	8e b1       	in	r24, 0x0e	; 14
 12a:	80 78       	andi	r24, 0x80	; 128
 12c:	8e b9       	out	0x0e, r24	; 14
// // 			//
//  			_delay_ms(1000);
//  			PORTD &= ~1<<0;
// 			//
 			PORTB &= ~1<<3;
 12e:	85 b1       	in	r24, 0x05	; 5
 130:	80 7f       	andi	r24, 0xF0	; 240
 132:	85 b9       	out	0x05, r24	; 5
			//
			PORTD |= 1<<4;
 134:	5c 9a       	sbi	0x0b, 4	; 11
 136:	2f ef       	ldi	r18, 0xFF	; 255
 138:	87 ea       	ldi	r24, 0xA7	; 167
 13a:	91 e6       	ldi	r25, 0x61	; 97
 13c:	21 50       	subi	r18, 0x01	; 1
 13e:	80 40       	sbci	r24, 0x00	; 0
 140:	90 40       	sbci	r25, 0x00	; 0
 142:	e1 f7       	brne	.-8      	; 0x13c <main+0x78>
 144:	00 c0       	rjmp	.+0      	; 0x146 <main+0x82>
 146:	00 00       	nop
			_delay_ms(2000);
			

			PORTD &= ~1<<4;
 148:	8b b1       	in	r24, 0x0b	; 11
 14a:	80 7e       	andi	r24, 0xE0	; 224
 14c:	8b b9       	out	0x0b, r24	; 11
 14e:	c3 cf       	rjmp	.-122    	; 0xd6 <main+0x12>

00000150 <_exit>:
 150:	f8 94       	cli

00000152 <__stop_program>:
 152:	ff cf       	rjmp	.-2      	; 0x152 <__stop_program>
