
60sec.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000da  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      00000030  00000000  00000000  0000012e  2**0
                  CONTENTS, READONLY
  2 .debug_aranges 00000028  00000000  00000000  0000015e  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_info   00000090  00000000  00000000  00000186  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_abbrev 0000005a  00000000  00000000  00000216  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_line   00000054  00000000  00000000  00000270  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_frame  00000048  00000000  00000000  000002c4  2**2
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    00000136  00000000  00000000  0000030c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00000049  00000000  00000000  00000442  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_ranges 00000018  00000000  00000000  0000048b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 59 00 	jmp	0xb2	; 0xb2 <__vector_11>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 6b 00 	jmp	0xd6	; 0xd6 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#include <avr/io.h> 
#include <avr/interrupt.h>

int main(void)
{
	SREG |= 1<<7;
  80:	8f b7       	in	r24, 0x3f	; 63
  82:	80 68       	ori	r24, 0x80	; 128
  84:	8f bf       	out	0x3f, r24	; 63
	DDRD = 0xff;
  86:	8f ef       	ldi	r24, 0xFF	; 255
  88:	8a b9       	out	0x0a, r24	; 10
    PORTD |= 1<<0;
  8a:	58 9a       	sbi	0x0b, 0	; 11
	
	OCR1A = 15625;
  8c:	89 e0       	ldi	r24, 0x09	; 9
  8e:	9d e3       	ldi	r25, 0x3D	; 61
  90:	90 93 89 00 	sts	0x0089, r25
  94:	80 93 88 00 	sts	0x0088, r24
	TIMSK1 |= 1<<1;
  98:	ef e6       	ldi	r30, 0x6F	; 111
  9a:	f0 e0       	ldi	r31, 0x00	; 0
  9c:	80 81       	ld	r24, Z
  9e:	82 60       	ori	r24, 0x02	; 2
  a0:	80 83       	st	Z, r24
	TCCR1A = 0;
  a2:	10 92 80 00 	sts	0x0080, r1
	TCCR1B = 0b00001100;
  a6:	8c e0       	ldi	r24, 0x0C	; 12
  a8:	80 93 81 00 	sts	0x0081, r24
	TCCR1C = 0;
  ac:	10 92 82 00 	sts	0x0082, r1
  b0:	ff cf       	rjmp	.-2      	; 0xb0 <main+0x30>

000000b2 <__vector_11>:
    {
        
    }
}

ISR (TIMER1_COMPA_vect) {
  b2:	1f 92       	push	r1
  b4:	0f 92       	push	r0
  b6:	0f b6       	in	r0, 0x3f	; 63
  b8:	0f 92       	push	r0
  ba:	11 24       	eor	r1, r1
  bc:	8f 93       	push	r24
  be:	9f 93       	push	r25
	PORTD ^= 1<<0;
  c0:	9b b1       	in	r25, 0x0b	; 11
  c2:	81 e0       	ldi	r24, 0x01	; 1
  c4:	89 27       	eor	r24, r25
  c6:	8b b9       	out	0x0b, r24	; 11
  c8:	9f 91       	pop	r25
  ca:	8f 91       	pop	r24
  cc:	0f 90       	pop	r0
  ce:	0f be       	out	0x3f, r0	; 63
  d0:	0f 90       	pop	r0
  d2:	1f 90       	pop	r1
  d4:	18 95       	reti

000000d6 <_exit>:
  d6:	f8 94       	cli

000000d8 <__stop_program>:
  d8:	ff cf       	rjmp	.-2      	; 0xd8 <__stop_program>
